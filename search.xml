<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Dozer 轻松高效玩转DTO(Data Transfer Object)</title>
      <link href="/blog/2021/03/05/Dozer-%E8%BD%BB%E6%9D%BE%E9%AB%98%E6%95%88%E7%8E%A9%E8%BD%ACDTO/"/>
      <url>/blog/2021/03/05/Dozer-%E8%BD%BB%E6%9D%BE%E9%AB%98%E6%95%88%E7%8E%A9%E8%BD%ACDTO/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'>Dozer 轻松高效玩转DTO(Data Transfer Object)</font></p><h1 id="为什么需要使用Dozer？"><a href="#为什么需要使用Dozer？" class="headerlink" title="为什么需要使用Dozer？"></a>为什么需要使用Dozer？</h1><p>&emsp;&emsp;对于分布式系统，需要在不同系统之间传递与转换域对象。因为我们不希望外部公开内部域对象，也不允许外部域对象渗入系统。传统上，数据对象之间的映射通过手工编码(getter/setter)的方式实现，或对象组装器（或转换器）来解决。我们可能会开发某种自定义映射框架来满足我们的映射转换需求，但这一切都显得不够灵巧。</p><h1 id="什么是Dozer？Dozer有什么功能？"><a href="#什么是Dozer？Dozer有什么功能？" class="headerlink" title="什么是Dozer？Dozer有什么功能？"></a>什么是Dozer？Dozer有什么功能？</h1><p>&emsp;&emsp;Dozer 是 Java Bean 到 Java Bean 映射器，它以递归方式将数据从一个对象复制到另一个对象。</p><p>&emsp;&emsp;Dozer 支持简单属性映射，复杂类型映射，双向映射，隐式和显式映射以及递归映射。</p><p>&emsp;&emsp;Dozer不仅支持属性名称之间的映射，还支持在类型之间自动转换。大多数转换方案都是开箱即用的，但 Dozer 还允许您通过 XML / API 的方式指定自定义转换。</p><h1 id="如何使用Dozer？"><a href="#如何使用Dozer？" class="headerlink" title="如何使用Dozer？"></a>如何使用Dozer？</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><h3 id="普通spring项目"><a href="#普通spring项目" class="headerlink" title="普通spring项目"></a>普通spring项目</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.dozermapper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dozer-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="spring-boot项目"><a href="#spring-boot项目" class="headerlink" title="spring boot项目"></a>spring boot项目</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.dozermapper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dozer-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="默认使用Dozer（同名-field-的双向映射，即隐式映射）"><a href="#默认使用Dozer（同名-field-的双向映射，即隐式映射）" class="headerlink" title="默认使用Dozer（同名 field 的双向映射，即隐式映射）"></a>默认使用Dozer（同名 field 的双向映射，即隐式映射）</h2><p>Dozer starter 默认为我们注入了 Dozer Mapper，可以直接使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 身份ID</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">// 姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 年龄</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">// 电话</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentVo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 身份ID</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">// 姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 年龄</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">// 电话</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Mapper dozerMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDefault</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="number">1L</span>, <span class="string">&quot;测试姓名&quot;</span>, <span class="number">18</span>, <span class="string">&quot;123333333&quot;</span>);</span><br><span class="line">    StudentVo studentVo = dozerMapper.map(student, StudentVo.class);</span><br><span class="line">    log.info(<span class="string">&quot;StudentVo: [&#123;&#125;]&quot;</span>, studentVo.toString());</span><br><span class="line">    studentVo.setAge(<span class="number">16</span>);</span><br><span class="line">    log.info(<span class="string">&quot;StudentDomain: [&#123;&#125;]&quot;</span>, dozerMapper.map(studentVo, Student.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要调用了dozerMapper的map方法</p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431268.png" alt="image-20210305151431268"></p><h2 id="不同名-field-的双向映射，需要显式映射"><a href="#不同名-field-的双向映射，需要显式映射" class="headerlink" title="不同名 field 的双向映射，需要显式映射"></a>不同名 field 的双向映射，需要显式映射</h2><p>如果两个待映射的 field 不同名，Dozer 默认不会帮我们完成映射，忽略该值，所以我们需要显示映射该 field</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431269.png" alt="image-20210305151431269"></p><p>增加DozerConfig文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DozerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mapper <span class="title">dozerMapper</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Mapper mapper = DozerBeanMapperBuilder.create()</span><br><span class="line">                <span class="comment">//指定 dozer mapping 的配置文件(放到 resources 类路径下即可)，可添加多个 xml 文件，用逗号隔开</span></span><br><span class="line">                .withMappingFiles(<span class="string">&quot;dozerBeanMapping.xml&quot;</span>)</span><br><span class="line">                .withMappingBuilder(beanMappingBuilder())</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> mapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BeanMappingBuilder <span class="title">beanMappingBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BeanMappingBuilder() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 显式配置添加在此</span></span><br><span class="line">                mapping(Student.class, StudentVo.class).fields(<span class="string">&quot;addr&quot;</span>,<span class="string">&quot;address&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431270.png" alt="image-20210305151431270"></p><h2 id="关闭隐式匹配，则同名字段不会映射"><a href="#关闭隐式匹配，则同名字段不会映射" class="headerlink" title="关闭隐式匹配，则同名字段不会映射"></a>关闭隐式匹配，则同名字段不会映射</h2><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431271.png" alt="image-20210305151431271"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431272.png" alt="image-20210305151431272"></p><h2 id="排除不想映射的字段"><a href="#排除不想映射的字段" class="headerlink" title="排除不想映射的字段"></a>排除不想映射的字段</h2><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431273.png" alt="image-20210305151431273"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431274.png" alt="image-20210305151431274"></p><h2 id="嵌套对象或者集合对象的递归映射"><a href="#嵌套对象或者集合对象的递归映射" class="headerlink" title="嵌套对象或者集合对象的递归映射"></a>嵌套对象或者集合对象的递归映射</h2><h3 id="新增实体"><a href="#新增实体" class="headerlink" title="新增实体"></a>新增实体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 省</span></span><br><span class="line">    <span class="keyword">private</span> String province;</span><br><span class="line">    <span class="comment">// 市</span></span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line">    <span class="comment">// 区</span></span><br><span class="line">    <span class="keyword">private</span> String district;</span><br><span class="line">    <span class="comment">// 详细</span></span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressVo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 省</span></span><br><span class="line">    <span class="keyword">private</span> String province;</span><br><span class="line">    <span class="comment">// 市</span></span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line">    <span class="comment">// 区</span></span><br><span class="line">    <span class="keyword">private</span> String district;</span><br><span class="line">    <span class="comment">// 详细</span></span><br><span class="line">    <span class="keyword">private</span> String detailAddress;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Class</span> </span>&#123;</span><br><span class="line">    <span class="comment">//课程编码</span></span><br><span class="line">    <span class="keyword">private</span> String courseCode;</span><br><span class="line">    <span class="comment">//课程名称</span></span><br><span class="line">    <span class="keyword">private</span> String className;</span><br><span class="line">    <span class="comment">//教师名称</span></span><br><span class="line">    <span class="keyword">private</span> String teacherName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassVo</span> </span>&#123;</span><br><span class="line">    <span class="comment">//课程编码</span></span><br><span class="line">    <span class="keyword">private</span> String courseCode;</span><br><span class="line">    <span class="comment">//课程名称</span></span><br><span class="line">    <span class="keyword">private</span> String className;</span><br><span class="line">    <span class="comment">//教师名称</span></span><br><span class="line">    <span class="keyword">private</span> String teacherName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Student和StudentVo增加字段"><a href="#Student和StudentVo增加字段" class="headerlink" title="Student和StudentVo增加字段"></a>Student和StudentVo增加字段</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431275.png" alt="image-20210305151431275"></p><h3 id="修改测试方法"><a href="#修改测试方法" class="headerlink" title="修改测试方法"></a>修改测试方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDefault1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;Class&gt; classList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Class classes = <span class="keyword">new</span> Class(<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;语文&quot;</span>,<span class="string">&quot;语文老师&quot;</span>);</span><br><span class="line">    Class classes1 = <span class="keyword">new</span> Class(<span class="string">&quot;1002&quot;</span>,<span class="string">&quot;数学&quot;</span>,<span class="string">&quot;数学老师&quot;</span>);</span><br><span class="line">    Class classes2 = <span class="keyword">new</span> Class(<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;英语&quot;</span>,<span class="string">&quot;英语老师&quot;</span>);</span><br><span class="line">    Collections.addAll(classList,classes,classes1,classes2);</span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="number">1L</span>, <span class="string">&quot;测试姓名&quot;</span>, <span class="number">18</span>, <span class="string">&quot;123333333&quot;</span>,<span class="string">&quot;广州&quot;</span>,</span><br><span class="line">            <span class="keyword">new</span> Address(<span class="string">&quot;广东省&quot;</span>,<span class="string">&quot;广州市&quot;</span>,<span class="string">&quot;天河区&quot;</span>,<span class="string">&quot;XXX路201号&quot;</span>),classList);</span><br><span class="line">    StudentVo studentVo = dozerMapper.map(student, StudentVo.class);</span><br><span class="line">    log.info(<span class="string">&quot;StudentVo: [&#123;&#125;]&quot;</span>, studentVo.toString());</span><br><span class="line">    studentVo.setAge(<span class="number">16</span>);</span><br><span class="line">    log.info(<span class="string">&quot;Student: [&#123;&#125;]&quot;</span>, dozerMapper.map(studentVo, Student.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431276.png" alt="image-20210305151431276"></p><h2 id="深度匹配"><a href="#深度匹配" class="headerlink" title="深度匹配"></a>深度匹配</h2><p>举例：在3.6中，语文老师同时也是班主任，所以希望语文老师的姓名也保存到Student上</p><h3 id="Student和StudentVo增加字段-1"><a href="#Student和StudentVo增加字段-1" class="headerlink" title="Student和StudentVo增加字段"></a>Student和StudentVo增加字段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//班主任</span></span><br><span class="line"><span class="keyword">private</span> String leaderTeacher;</span><br></pre></td></tr></table></figure><h3 id="配置类添加配置，映射第一个老师的姓名字段到班主任字段上"><a href="#配置类添加配置，映射第一个老师的姓名字段到班主任字段上" class="headerlink" title="配置类添加配置，映射第一个老师的姓名字段到班主任字段上"></a>配置类添加配置，映射第一个老师的姓名字段到班主任字段上</h3><p><font color='red'>注意：使用单向映射，否则会出现反向映射会多一个空对象在原来的数组对象面。</font></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431277.png" alt="image-20210305151431276"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431278.png" alt="image-20210305151431276"></p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p>Dozer 开箱即用的功能之一就是类型转换，大多数类型我们不需要手动转换类型，完全交给 Dozer即可</p><h3 id="StudentVo的age字段修改为String"><a href="#StudentVo的age字段修改为String" class="headerlink" title="StudentVo的age字段修改为String"></a>StudentVo的age字段修改为String</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431279.png" alt="image-20210305151431279"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431280.png" alt="image-20210305151431280"></p><h2 id="类型转换的特殊情况（Date-和-String-不可以互转）"><a href="#类型转换的特殊情况（Date-和-String-不可以互转）" class="headerlink" title="类型转换的特殊情况（Date 和 String 不可以互转）"></a>类型转换的特殊情况（Date 和 String 不可以互转）</h2><h3 id="Student和StudentVo增加字段schoolTime"><a href="#Student和StudentVo增加字段schoolTime" class="headerlink" title="Student和StudentVo增加字段schoolTime"></a>Student和StudentVo增加字段schoolTime</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431281.png" alt="image-20210305151431281"></p><h3 id="config增加对时间格式的处理"><a href="#config增加对时间格式的处理" class="headerlink" title="config增加对时间格式的处理"></a>config增加对时间格式的处理</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431282.png" alt="image-20210305151431281"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431283.png" alt="image-20210305151431281"></p><h3 id="也可以进行全局设置，在config里面配置的xml文件添加对时间格式化的代码即可，但是如果两边同时配置，会优先使用mapping里面的配置"><a href="#也可以进行全局设置，在config里面配置的xml文件添加对时间格式化的代码即可，但是如果两边同时配置，会优先使用mapping里面的配置" class="headerlink" title="也可以进行全局设置，在config里面配置的xml文件添加对时间格式化的代码即可，但是如果两边同时配置，会优先使用mapping里面的配置"></a>也可以进行全局设置，在config里面配置的xml文件添加对时间格式化的代码即可，但是如果两边同时配置，会优先使用mapping里面的配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 默认是 true，当发生转换错误时抛出异常，停止转换，这里设置成false，如果转换错误，继续转换 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stop-on-errors</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stop-on-errors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">date-format</span>&gt;</span>yyyy年MM月dd日 HH时mm分ss秒<span class="tag">&lt;/<span class="name">date-format</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431284.png" alt="image-20210305151431284"></p><h2 id="指定情况进行映射"><a href="#指定情况进行映射" class="headerlink" title="指定情况进行映射"></a>指定情况进行映射</h2><h3 id="指定使用userFileldOneWay来设置年龄字段进行单向映射"><a href="#指定使用userFileldOneWay来设置年龄字段进行单向映射" class="headerlink" title="指定使用userFileldOneWay来设置年龄字段进行单向映射"></a>指定使用userFileldOneWay来设置年龄字段进行单向映射</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431285.png" alt="image-20210305151431285"></p><h3 id="编写测试类，输出年龄"><a href="#编写测试类，输出年龄" class="headerlink" title="编写测试类，输出年龄"></a>编写测试类，输出年龄</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDefault2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;Class&gt; classList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Class classes = <span class="keyword">new</span> Class(<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;语文&quot;</span>,<span class="string">&quot;语文老师&quot;</span>);</span><br><span class="line">    Class classes1 = <span class="keyword">new</span> Class(<span class="string">&quot;1002&quot;</span>,<span class="string">&quot;数学&quot;</span>,<span class="string">&quot;数学老师&quot;</span>);</span><br><span class="line">    Class classes2 = <span class="keyword">new</span> Class(<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;英语&quot;</span>,<span class="string">&quot;英语老师&quot;</span>);</span><br><span class="line">    Collections.addAll(classList,classes,classes1,classes2);</span><br><span class="line">    Student student = <span class="keyword">new</span> Student();</span><br><span class="line">    student.setId(<span class="number">1L</span>);</span><br><span class="line">    student.setName(<span class="string">&quot;测试姓名&quot;</span>);</span><br><span class="line">    student.setAge(<span class="number">18</span>);</span><br><span class="line">    student.setMobile(<span class="string">&quot;123333333&quot;</span>);</span><br><span class="line">    student.setAddr(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">    student.setAddress(<span class="keyword">new</span> Address(<span class="string">&quot;广东省&quot;</span>,<span class="string">&quot;广州市&quot;</span>,<span class="string">&quot;天河区&quot;</span>,<span class="string">&quot;XXX路201号&quot;</span>));</span><br><span class="line">    student.setClassList(classList);</span><br><span class="line">    student.setSchoolTime(<span class="keyword">new</span> Timestamp(System.currentTimeMillis()));</span><br><span class="line">    StudentVo studentVo = dozerMapper.map(student, StudentVo.class);</span><br><span class="line">    log.info(<span class="string">&quot;不指定StudentVo: [&#123;&#125;]&quot;</span>, studentVo.getAge());</span><br><span class="line">    Student student1 = dozerMapper.map(studentVo, Student.class);</span><br><span class="line">    log.info(<span class="string">&quot;不指定Student: [&#123;&#125;]&quot;</span>,student1.getAge());</span><br><span class="line">    StudentVo studentVo1 = dozerMapper.map(student, StudentVo.class,<span class="string">&quot;userFieldOneWay&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;指定StudentVo: [&#123;&#125;]&quot;</span>, studentVo1.getAge());</span><br><span class="line">    Student student2 = dozerMapper.map(studentVo1, Student.class,<span class="string">&quot;userFieldOneWay&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;指定Student: [&#123;&#125;]&quot;</span>,student2.getAge());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431286.png" alt="image-20210305151431286"></p><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431287.png" alt="image-20210305151431287"></p><h2 id="自定义进行映射转换"><a href="#自定义进行映射转换" class="headerlink" title="自定义进行映射转换"></a>自定义进行映射转换</h2><h3 id="新增学生成绩字段Student是Integer类型，StudentVo是枚举类型"><a href="#新增学生成绩字段Student是Integer类型，StudentVo是枚举类型" class="headerlink" title="新增学生成绩字段Student是Integer类型，StudentVo是枚举类型"></a>新增学生成绩字段Student是Integer类型，StudentVo是枚举类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.g4b.study.dozer.config;</span><br><span class="line"><span class="comment">/**分数等级枚举类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cqw*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ScoreEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">//85~100分为等级A</span></span><br><span class="line">    A,</span><br><span class="line">    <span class="comment">//75~84分为等级B</span></span><br><span class="line">    B,</span><br><span class="line">    <span class="comment">//60~74分为等级C</span></span><br><span class="line">    C,</span><br><span class="line">    <span class="comment">//&lt;60分为等级D</span></span><br><span class="line">    D</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431288.png" alt="image-20210305151431288"></p><h3 id="定义之定义的方法"><a href="#定义之定义的方法" class="headerlink" title="定义之定义的方法"></a>定义之定义的方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScoreConverter</span> <span class="keyword">extends</span> <span class="title">DozerConverter</span>&lt;<span class="title">Integer</span>,<span class="title">ScoreEnum</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScoreConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(Integer.class, ScoreEnum.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ScoreEnum <span class="title">convertTo</span><span class="params">(Integer score, ScoreEnum scoreEnum)</span> </span>&#123;</span><br><span class="line">        ScoreEnum result = ScoreEnum.D;</span><br><span class="line">        <span class="keyword">if</span>(score &gt;= <span class="number">85</span>)&#123;</span><br><span class="line">            result = ScoreEnum.A;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">75</span> &amp;&amp; score &lt; <span class="number">85</span>)&#123;</span><br><span class="line">            result = ScoreEnum.B;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">75</span>)&#123;</span><br><span class="line">            result = ScoreEnum.C;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">convertFrom</span><span class="params">(ScoreEnum scoreEnum, Integer integer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScoreConverter</span> <span class="keyword">extends</span> <span class="title">DozerConverter</span>&lt;<span class="title">Integer</span>,<span class="title">ScoreEnum</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScoreConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(Integer.class, ScoreEnum.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ScoreEnum <span class="title">convertTo</span><span class="params">(Integer score, ScoreEnum scoreEnum)</span> </span>&#123;</span><br><span class="line">        ScoreEnum result = ScoreEnum.D;</span><br><span class="line">        <span class="keyword">if</span>(score &gt;= <span class="number">85</span>)&#123;</span><br><span class="line">            result = ScoreEnum.A;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">75</span> &amp;&amp; score &lt; <span class="number">85</span>)&#123;</span><br><span class="line">            result = ScoreEnum.B;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">75</span>)&#123;</span><br><span class="line">            result = ScoreEnum.C;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">convertFrom</span><span class="params">(ScoreEnum scoreEnum, Integer integer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置转换字段"><a href="#配置转换字段" class="headerlink" title="配置转换字段"></a>配置转换字段</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431289.png" alt="image-20210305151431289"></p><h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDefault3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;Student&gt; students = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Student student = <span class="keyword">new</span> Student();</span><br><span class="line">    student.setName(<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">    student.setScore(<span class="number">80</span>);</span><br><span class="line">    students.add(student);</span><br><span class="line">    Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line">    student1.setName(<span class="string">&quot;小宏&quot;</span>);</span><br><span class="line">    student1.setScore(<span class="number">55</span>);</span><br><span class="line">    students.add(student1);</span><br><span class="line">    Student student2 = <span class="keyword">new</span> Student();</span><br><span class="line">    student2.setName(<span class="string">&quot;小红&quot;</span>);</span><br><span class="line">    student2.setScore(<span class="number">94</span>);</span><br><span class="line">    students.add(student2);</span><br><span class="line">    Student student3 = <span class="keyword">new</span> Student();</span><br><span class="line">    student3.setName(<span class="string">&quot;小1&quot;</span>);</span><br><span class="line">    student3.setScore(<span class="number">65</span>);</span><br><span class="line">    students.add(student3);</span><br><span class="line">    <span class="keyword">for</span> (Student stu : students) &#123;</span><br><span class="line">        StudentVo studentVo1 = dozerMapper.map(stu, StudentVo.class);</span><br><span class="line">        log.info(studentVo1.getName()+<span class="string">&quot;的成绩是: [&#123;&#125;],其等级是: [&#123;&#125;];&quot;</span>,stu.getScore(), studentVo1.getScore());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305151431290.png" alt="image-20210305151431290"></p><h1 id="实现转换List的工具类"><a href="#实现转换List的工具类" class="headerlink" title="实现转换List的工具类"></a>实现转换List的工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.g4b.study.dozer.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dozer.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.NonNull;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DozerUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * dozer转换的核心mapper对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Mapper dozerMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Mapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DozerUtil.setDozerMapper(mapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setDozerMapper</span><span class="params">(Mapper dozerMapper)</span> </span>&#123;</span><br><span class="line">        DozerUtil.dozerMapper = dozerMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换实体为另一个指定的实体</span></span><br><span class="line"><span class="comment">     * 任意一个参数为NULL时 会抛出NPE</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 源实体 不能为NULL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 目标实体 不能为NULL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 转换后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">convert</span><span class="params">(<span class="meta">@NonNull</span> Object source, <span class="meta">@NonNull</span> Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  dozerMapper.map(source, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换List实体为另一个指定的实体</span></span><br><span class="line"><span class="comment">     * source如果为NULL 会使用空集合</span></span><br><span class="line"><span class="comment">     * 在目标实体为NULL时 会抛出NPE</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 源集合 可以为NULL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 目标实体 不能为NULL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 转换后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">convert</span><span class="params">(<span class="meta">@Nullable</span> List&lt;?&gt; source, <span class="meta">@NonNull</span> Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Optional.ofNullable(source)</span><br><span class="line">                .orElse(Collections.emptyList())</span><br><span class="line">                .stream()</span><br><span class="line">                .map(bean -&gt; dozerMapper.map(bean, clazz))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDefault6</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Class classes = <span class="keyword">new</span> Class(<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;语文&quot;</span>,<span class="string">&quot;语文老师&quot;</span>);</span><br><span class="line">        Class classes1 = <span class="keyword">new</span> Class(<span class="string">&quot;1002&quot;</span>,<span class="string">&quot;数学&quot;</span>,<span class="string">&quot;数学老师&quot;</span>);</span><br><span class="line">        Class classes2 = <span class="keyword">new</span> Class(<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;英语&quot;</span>,<span class="string">&quot;英语老师&quot;</span>);</span><br><span class="line">        List&lt;Class&gt; paramList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Collections.addAll(paramList,classes,classes1,classes2);</span><br><span class="line">        List&lt;ClassVo&gt; convert = DozerUtil.convert(paramList, ClassVo.class);</span><br><span class="line">        System.out.println(convert);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210305161853199.png" alt="image-20210305161853199"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> Dozer </category>
          
          <category> 对象拷贝 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dozer </tag>
            
            <tag> 复制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式事务和Alibaba Seata的介绍和使用</title>
      <link href="/blog/2021/02/20/Seata%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/blog/2021/02/20/Seata%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'>分布式事务和Alibaba  Seata的介绍和使用</font></p><h1 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h1><h2 id="什么是分布式事务？"><a href="#什么是分布式事务？" class="headerlink" title="什么是分布式事务？"></a>什么是分布式事务？</h2><p>&emsp;&emsp;在一次大的操作由不同的小的操作组成的，这些小的操作分布在不同的服务器上，分布式需要保证这些小操作要么全部成功，要么全部失败。本质上讲，分布式事务就是为了保证不同数据库的数据一致性。</p><h2 id="分布式事务产生的原因？"><a href="#分布式事务产生的原因？" class="headerlink" title="分布式事务产生的原因？"></a>分布式事务产生的原因？</h2><h3 id="原因一：数据库的分库分表"><a href="#原因一：数据库的分库分表" class="headerlink" title="原因一：数据库的分库分表"></a>原因一：数据库的分库分表</h3><p>&emsp;&emsp;当数据库单表数据超过千万级别，就需要考虑分库分表的问题，那么我们的系统就会从原来的一个数据库变成多个数据库，那么此时我们在同时操作多个数据库时，就需要保证数据的一致性，所以就需要使用分布式事务。</p><h3 id="原因二：应用SOA化"><a href="#原因二：应用SOA化" class="headerlink" title="原因二：应用SOA化"></a>原因二：应用SOA化</h3><p>&emsp;&emsp;所谓SOA化，就是业务的服务化。我们一个系统在访问量上去之后，我们会考虑把不同的功能放到不同的服务上面去运行，此时如果我们需要操作一连串功能，那么我们可能需要操作不同的服务，不同的数据库，为了保证数据的一致性，我们就需要使用分布式事务。</p><p>&emsp;&emsp;总结：不管是上面的那种方式，归根结底就是需要操作不同的数据库，为了保证数据的一致性，从而产生分布式事务。</p><h1 id="分布式理论"><a href="#分布式理论" class="headerlink" title="分布式理论"></a>分布式理论</h1><h2 id="CAP定理"><a href="#CAP定理" class="headerlink" title="CAP定理"></a>CAP定理</h2><p>&emsp;&emsp;CAP定理是由加州大学伯克利分校Eric Brewer教授提出来的，他指出WEB服务无法同时满足一下3个属性：</p><ul><li><p>一致性(Consistency) ： 客户端知道一系列的操作都会同时发生(生效)；</p></li><li><p>可用性(Availability) ： 每个操作都必须以可预期的响应结束；</p></li><li><p>分区容错性(Partition tolerance) ： 即使出现单个组件无法可用,操作依然可以完成。</p><p><img src="https://www.wangbase.com/blogimg/asset/201807/bg2018071607.jpg" alt="img"></p></li></ul><h3 id="CAP属性解读"><a href="#CAP属性解读" class="headerlink" title="CAP属性解读"></a>CAP属性解读</h3><p>&emsp;&emsp;<strong>a、分区容错性</strong>：指的分布式系统中的某个节点或者网络分区出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务。也就是说部分故障不影响整体使用。</p><p>事实上我们在设计分布式系统是都会考虑到bug，硬件，网络等各种原因造成的故障，所以即使部分节点或者网络出现故障，我们要求整个系统还是要继续使用的。</p><p>(不继续使用,相当于只有一个分区,那么也就没有后续的一致性和可用性了)</p><p>&emsp;&emsp;<strong>b、可用性：</strong> 一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应。用户角度来看就是不会出现系统操作失败或者访问超时等问题。</p><p>&emsp;&emsp;<strong>c、一致性</strong>：在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值。相当于要求分布式系统中的各节点时时刻刻保持数据的一致性。</p><h3 id="一致性与可用性的矛盾"><a href="#一致性与可用性的矛盾" class="headerlink" title="一致性与可用性的矛盾"></a>一致性与可用性的矛盾</h3><p>&emsp;&emsp;一致性和可用性，为什么不可能同时成立？答案很简单，因为可能通信失败（即出现分区容错）。</p><p>&emsp;&emsp;我们举个例子，以下图为例：</p><p><img src="https://www.wangbase.com/blogimg/asset/201807/bg2018071601.png" alt="img"></p><p>&emsp;&emsp;client修改G1中V0的数据为V1，按照正常情况下，修改之后，G1通知G2，V0修改为V1了，然后G2也同步修改为V1，name此时client读取G1或G2的数据都是V1；</p><p>&emsp;&emsp;但是，如果此时G1与G2之间的网络通信出现延迟或异常，那么G1中V0的数据为V1，但是G2还不知道，所以此时G2的数据还是V0</p><p>&emsp;&emsp;如果保证 G2 的一致性，那么 G1 必须在写操作时，锁定 G2 的读操作和写操作。只有数据同步后，才能重新开放读写。锁定期间，G2 不能读写，没有可用性。</p><p>&emsp;&emsp;如果保证 G2 的可用性，那么势必不能锁定 G2，所以一致性不成立。</p><p>&emsp;&emsp;综上所述，G2 无法同时做到一致性和可用性。系统设计时只能选择一个目标。如果追求一致性，那么无法保证所有节点的可用性；如果追求所有节点的可用性，那就没法做到一致性。这也是我们一直只看到只有AP或CP的选择，没有选择CA的操作，而且放弃分区容错性，也意味着放弃系统的扩展性，系统不再是分布式的，有违设计的初衷。</p><h3 id="CAP特性的取舍策略"><a href="#CAP特性的取舍策略" class="headerlink" title="CAP特性的取舍策略"></a>CAP特性的取舍策略</h3><p>&emsp;&emsp;a、满足AP舍弃C，也就是满足可用性和容错性，舍弃一致性。这也就是意味着你的系统在并发访问的时候可能会出现数据不一致的情况。事实证明，大多数都是牺牲了一致性。像12306还有淘宝网，就好比是你买火车票，本来你看到的是还有一张票，其实在这个时刻已经被买走了，你填好了信息准备买的时候发现系统提示你没票了，这就是牺牲了一致性。</p><p>&emsp;&emsp;b、满足CP舍弃A，也就是满足一致性和容错性，舍弃可用性。如果你的系统允许有段时间的访问失效等问题，这个是可以满足的（确实来讲用户体验会很差）。</p><h2 id="BASE理论"><a href="#BASE理论" class="headerlink" title="BASE理论"></a>BASE理论</h2><p>&emsp;&emsp;在上面CAP的介绍中，我们说CAP三者不能同时满足，而分区容错对于分布式系统来讲，是必须的，所以出现BASE理论。BASE理论如图相当于CAP中的AP。</p><p><img src="https://www.wangbase.com/blogimg/asset/201807/9825bc315c6034a8b7e1a56f6737965008237682.jpeg" alt="123"></p><h3 id="什么是BASE理论"><a href="#什么是BASE理论" class="headerlink" title="什么是BASE理论"></a>什么是BASE理论</h3><p>&emsp;&emsp;BASE理论是 Basically Available(基本可用)，Soft state（软状态）和 Eventually consistent（最终一致性）三个短语的缩写，来自 ebay 的架构师提出。他的核心思想是：即使无法做到强一致性（Strong Consistency，CAP 的一致性就是强一致性），但应用可以采用适合的方式达到<strong>最终一致性</strong>（Eventual Consitency）。</p><h4 id="基本可用性（Basically-Available）"><a href="#基本可用性（Basically-Available）" class="headerlink" title="基本可用性（Basically Available）"></a>基本可用性（Basically Available）</h4><p>&emsp;&emsp;基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性<font color='red'>（但请注意，这绝不等价于系统不可用，以下两个就是“基本可用”的典型例子）</font>。</p><ul><li>响应时间上的损失：正常情况下，一个在线搜索引擎需要0.5秒内返回给用户相应的查询结果，但由于出现异常（比如系统部分机房发生断电或断网故障），查询结果的响应时间增加到了1~2秒。</li><li>功能上的损失：正常情况下，在一个电子商务网站上进行购物，消费者几乎能够顺利地完成每一笔订单，但是在一些节日大促购物高峰的时候，由于消费者的购物行为激增，为了保护购物系统的稳定性，部分消费者可能会被引导到一个降级页面。</li></ul><h4 id="软状态（Soft-state）"><a href="#软状态（Soft-state）" class="headerlink" title="软状态（Soft state）"></a>软状态（Soft state）</h4><p>&emsp;&emsp;软状态也称为弱状态，和硬状态相对，是指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步过程存在延时。</p><h4 id="最终一致性（Eventual-Consitency）"><a href="#最终一致性（Eventual-Consitency）" class="headerlink" title="最终一致性（Eventual Consitency）"></a>最终一致性（Eventual Consitency）</h4><p>&emsp;&emsp;最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。</p><p>而在实际工程实践中，<strong>最终一致性分为 5 种：</strong></p><p><strong>a、因果一致性（Causal consistency）</strong></p><p>&emsp;&emsp;如果节点 A 在更新完某个数据后通知了节点 B，那么节点 B 之后对该数据的访问和修改都是基于 A 更新后的值。与此同时，和节点 A 无因果关系的节点 C 的数据访问则没有这样的限制。</p><p><strong>b、 读己之所写（Read your writes）</strong></p><p>&emsp;&emsp;这种就很简单了，节点 A 更新一个数据后，它自身总是能访问到自身更新过的最新值，而不会看到旧值。其实也算一种因果一致性。</p><p><strong>c、会话一致性（Session consistency）</strong></p><p>&emsp;&emsp;会话一致性将对系统数据的访问过程框定在了一个会话当中：系统能保证在同一个有效的会话中实现 “读己之所写” 的一致性，也就是说，执行更新操作之后，客户端能够在同一个会话中始终读取到该数据项的最新值。</p><p><strong>d、 单调读一致性（Monotonic read consistency）</strong></p><p>&emsp;&emsp;单调读一致性是指如果一个节点从系统中读取出一个数据项的某个值后，那么系统对于该节点后续的任何数据访问都不应该返回更旧的值。</p><p><strong>e、单调写一致性（Monotonic write consistency）</strong></p><p>&emsp;&emsp;指一个系统要能够保证来自同一个节点的写操作被顺序的执行。</p><p>&emsp;&emsp;然而，在实际的实践中，这 5 种系统往往会结合使用，以构建一个具有最终一致性的分布式系统。实际上，不只是分布式系统使用最终一致性，关系型数据库在某个功能上，也是使用最终一致性的，比如备份，数据库的复制过程是需要时间的，这个复制过程中，业务读取到的值就是旧的。当然，最终还是达成了数据一致性。这也算是一个最终一致性的经典案例。</p><p>&emsp;&emsp;总的来说，BASE 理论面向的是大型高可用可扩展的分布式系统，和传统事务的 ACID 是<strong>相反的</strong>，它完全不同于 ACID 的强一致性模型，而是<strong>通过牺牲强一致性</strong>来获得可用性，并允许数据在一段时间是不一致的。</p><h1 id="分布式事务的解决方案"><a href="#分布式事务的解决方案" class="headerlink" title="分布式事务的解决方案"></a>分布式事务的解决方案</h1><p><font size='5px'><strong>刚性事务</strong></font></p><h2 id="2PC（-XA-Transactions）"><a href="#2PC（-XA-Transactions）" class="headerlink" title="2PC（ XA Transactions）"></a>2PC（ XA Transactions）</h2><p>&emsp;&emsp;XA，是一个两阶段的提交协议，定义了事务管理器（Transaction Manager）和资源管理器（Resource Manager）之间的接口。通过引入协调者（Coordinator）来协调参与者的行为，并最终决定这些参与者是否要真正执行事务，该协议分为以下两个阶段：</p><p>a、第一阶段：事务协调器要求每个涉及到事务的数据库预提交（precommit）此操作，并反馈可以提交；</p><p>b、第二阶段：事务协调器要求每个数据库提交或回滚事务。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609605610807.png" alt="1609605610807"></p><p>两阶段提交这种解决方案属于牺牲了一部分可用性来换取的一致性。</p><p><strong>优点：</strong> <font color='red'>尽量</font>保证了数据的强一致，适合对数据强一致要求很高的关键领域。（其实也不能100%保证强一致）</p><p><strong>缺点：</strong> </p><p>&emsp;&emsp;a、同步阻塞：所有事务参与者在等待其他参与者响应的时候都处于同步阻塞的状态，无法进行其他操作；</p><p>&emsp;&emsp;b、单点问题：协调者在2PC中起到非常关键的作用，如果发生故障则会造成严重的影响，特别是在第二阶段发生故障，则所有参与者都会一直等待，无法进行其他操作；</p><p>&emsp;&emsp;c、数据不一致：在第二阶段，如果协调者只发送了部分commit的消息，那么如果此时发生网络异常，那么就只有部分参与者提交了事务，使得数据不一致（<font color='red'>所有的分布式事务都不是能够完全解决数据不一致的问题，只能说是尽量做到避免数据不一致的情况出现</font>）；</p><p>&emsp;&emsp;d、容错率低：任意一个节点失败就会导致整个事务失败，没有完善的容错机制。</p><p>XA并不是Java的规范，而是一种通用的规范。而JTA则是满足XA规范的用于Java开发的规范。</p><h3 id="2PC的实现——atomikos"><a href="#2PC的实现——atomikos" class="headerlink" title="2PC的实现——atomikos"></a>2PC的实现——atomikos</h3><p>&emsp;&emsp;这里使用<a href="https://blog.csdn.net/leilei1366615/article/details/104678279%E6%96%87%E7%AB%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E6%B5%8B%E8%AF%95%EF%BC%8C%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9Ahttps://cheng_qiwei.gitee.io/blog/resource/file/springboot-mybatis-plus-atomikos.zip%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E6%BA%90%EF%BC%8C%E6%9D%A5%E5%90%8C%E6%97%B6%E4%BF%9D%E5%AD%98user%E3%80%81role%E3%80%81userRole%E4%B8%89%E5%BC%A0%E8%A1%A8%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%88%91%E4%BB%AC%E9%A6%96%E5%85%88%E5%B0%86%E5%BC%82%E5%B8%B8%E6%B3%A8%E9%87%8A%EF%BC%8C%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E6%AD%A3%E5%B8%B8%E7%9A%84%E4%BF%9D%E5%AD%98%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%EF%BC%8C%E6%95%B0%E6%8D%AE%E9%83%BD%E8%A2%AB%E6%88%90%E5%8A%9F%E4%BF%9D%E5%AD%98%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B9%9F%E6%98%AF%E6%A0%B9%E6%8D%AE2PC%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%8C%E5%85%88%E6%89%A7%E8%A1%8C%E9%A2%84%E6%8F%90%E4%BA%A4%EF%BC%8C%E5%86%8D%E6%89%80%E6%9C%89%E9%83%BD%E6%88%90%E5%8A%9F%E5%90%8E%E6%89%A7%E8%A1%8Ccommit%E8%BF%9B%E8%A1%8C%E4%BF%9D%E5%AD%98%E3%80%82">https://blog.csdn.net/leilei1366615/article/details/104678279文章的代码进行测试，完整代码下载地址：https://cheng_qiwei.gitee.io/blog/resource/file/springboot-mybatis-plus-atomikos.zip通过配置多个数据源，来同时保存user、role、userRole三张表的数据，我们首先将异常注释，执行一次正常的保存，我们可以看到，数据都被成功保存，控制台也是根据2PC的规则，先执行预提交，再所有都成功后执行commit进行保存。</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684240746.png" alt="1609684240746"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684376913.png" alt="1609684376913"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684452348.png" alt="1609684452348"></p><p>&emsp;&emsp;然后我们打开异常，再执行一次，我们可以发现，当出现异常后，前面的数据并没有保存到数据库，而是回滚了，我们通过控制台也可以看见，当执行到异常那一行后，前面两个预提交的事务被注销了，所以就保证了数据的一致性。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684731890.png" alt="1609684731890"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684802598.png" alt="1609684802598"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609684923835.png" alt="1609684923835"></p><h2 id="3PC（三阶段事务提交）"><a href="#3PC（三阶段事务提交）" class="headerlink" title="3PC（三阶段事务提交）"></a>3PC（三阶段事务提交）</h2><p>&emsp;&emsp;3PC是2PC的升级版，他是在2PC的基础上，<strong>同时在协调者和参与者中都引入了超时机制</strong>。3PC分为以下几个阶段：</p><p>a、<strong>cancommit</strong>阶段：类似于2PC的准备阶段，协调者向参与者发送commit请求，参与者如果可以提交就返回Yes响应，否则返回No响应；</p><p>b、<strong>preparecommit</strong>阶段：协调者根据参与者的反馈情况来决定是否可以执行事务PreCommit操作；</p><p>c、<strong>doCommit</strong>阶段:该阶段进行真正的事务提交。该阶段进行真正的事务提交，也可以分为以下两种情况。</p><p>&emsp;&emsp;c1、执行提交，参与者首先发送提交请求协调接收到参与者发送的ACK响应，那么协调者将从预提交状态进入到提交状态。并向所有参与者发送doCommit请求。参与者接收到doCommit请求之后，执行正式的事务提交，并在完成事务提交之后释放所有事务资源。接着事务提交完之后，参与者向协调者发送Ack响应。最后协调者接收到所有参与者的ack响应之后，完成事务。</p><p>&emsp;&emsp;c2、中断事务，协调者没有接收到参与者发送的ACK响应。（可能是接受者发送的不是ACK响应，也可能响应超时）。协调者向所有参与者发送终止请求，参与者在接收到终止请求后，会利用其在二阶段记录的信息来执行事务回滚操作，并在完成事务回滚之后释放所有事务资源。回滚之后，向协调者发送Ack信息，中断事务。</p><p>&emsp;&emsp;<font color='red'>注意事项：在阶段三，会出现以下两种故障，第一是协调者出现问题，第二是协调者和参与者之间的网络出现故障。但无论是哪种情况，最终都会导致参与者无法及时接收来自协调者的提交或回滚的请求，针对这种情况，3PC的解决方案是在参与者等待超时之后，会继续对事物进行commit操作，这样的操作相对于2PC中继续等待来讲是降低了参与者的阻塞范围，但这样操作后必然出现数据不一致性。</font></p><p><font size='5px'><strong>柔性事务</strong></font></p><h2 id="TCC（Try-Confirm-Cancel）两阶段补偿性方案"><a href="#TCC（Try-Confirm-Cancel）两阶段补偿性方案" class="headerlink" title="TCC（Try-Confirm-Cancel）两阶段补偿性方案"></a>TCC（Try-Confirm-Cancel）两阶段补偿性方案</h2><p> &emsp;&emsp;TCC 也是2PC的一种变体，其实就是采用的补偿机制，其核心思想是：针对每个操作，都要注册一个与其对应的确认和补偿（撤销）操作。TCC主要分为三个阶段：</p><p>&emsp;&emsp;Try阶段：对业务系统做检测及资源预留；</p><p>&emsp;&emsp;Confirm阶段：对业务系统做确认提交，Try阶段执行成功并开始执行confirm阶段时，默认confirm阶段是不会出错的；</p><p>&emsp;&emsp;Cancel阶段：在业务执行错误时，需要回滚的时候执行的业务取消并将预留的资源释放。</p><p><strong>根据上面的描述，我们举个栗子：</strong></p><p>&emsp;&emsp;假设有一个支付订单的场景：当我们支付完一笔订单后，我们需要进行以下几个步骤的操作</p><p>&emsp;&emsp;&emsp;a、更改订单状态为已支付；</p><p>&emsp;&emsp;&emsp;b、扣减商品库存；</p><p>&emsp;&emsp;&emsp;c、会员增加积分；</p><p>&emsp;&emsp;&emsp;d、创建销售单。</p><p>&emsp;&emsp;那么，我们现在肯定希望的效果是，上述几个步骤在一次操作中同时成功或同时失败，必须是一个整体性的事务。但是，但我们上述这几个操作都在不同的服务上，且系统无进行任何分布式事务处理时，当我们已经执行了更改订单状态，扣减商品库存之后，会员积分服务突然挂了，此时后面的创建销售单操作也无法执行，但是订单状态已经更改，商品库存已经扣除，这就出现了数据不一致的问题。</p><p>&emsp;&emsp;现在，我们来使用TCC对我们的项目进行改造，首先是T（Try）阶段，这个阶段，我们不是直接一步到位就把订单状态给改了或者对商品数量接直接给减了，而是一个预备的过程。例如按照我们上面的例子来讲，我们可以首先将订单更改为支付中的一个状态，扣减商品库存也不是真的扣减，而是增加一个字段，用来先保存我们扣减的商品的数量，积分也是增加字段，用来保存增加的积分……，这一步执行的真正目的除了保留了一些需要使用的资源（例如冻结部分资源）以外，也确保了底层的数据源（数据库、redis、es）等都是正常的。</p><p>&emsp;&emsp;接着，到了C（Confirm）阶段，如果第一阶段运行顺利，所有操作都成功了，那么就可以执行Confirm阶段的操作，正式把数据修改到数据库，比如说，把订单修改为已支付，扣减商品库存，增加积分……，同时将预备的数据清除掉。</p><p>&emsp;&emsp;上面的C是指正常情况下的处理方法，那么如果出现异常呢？例如上面说的会员积分服务突然挂了，那么就需要第二个C（Cancel）阶段来处理了，该阶段，我们需要把之前半修改的数据修改回来，例如说，把订单支付中的状态修改为待支付的状态，保存商品扣减数量的字段删除对应的数量……，这样就回滚了数据，保证了数据的一致性。</p><p>&emsp;&emsp;那么，根据上述内容，如果某个服务突然发生意外，然后进行重启，TCC是如何保证之前没有执行的分布式事务继续执行呢？如果某个服务一直Confirm或cancel失败怎么办？其实，事务框架都是需要记录各个服务的状态，可以在文件或数据库进行记录，保存分布式事务运行的各个状态，可以通过日志记录进行重试，使其成功，且如果第一步try如果成功进行的话，如果不是代码有bug的话，一般不会出现Confirm或cancel失败的情况。</p><p><strong>TCC的优点及缺点</strong></p><p>&emsp;&emsp;<strong>优点：</strong> 跟2PC比起来，实现以及流程相对简单了一些，但数据的一致性比2PC也要差一些；</p><p>&emsp;&emsp;<strong>缺点：</strong> 缺点还是比较明显的，在2,3步中都有可能失败。TCC属于应用层的一种补偿方式，所以需要程序员在实现的时候多写很多补偿的代码，在一些场景中，一些业务流程可能用TCC不太好定义及处理。</p><h1 id="springCloudAlibaba——Seata"><a href="#springCloudAlibaba——Seata" class="headerlink" title="springCloudAlibaba——Seata"></a>springCloudAlibaba——Seata</h1><p>&emsp;&emsp;Seata 是一款Alibaba开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。</p><h2 id="Seata的重要概念"><a href="#Seata的重要概念" class="headerlink" title="Seata的重要概念"></a>Seata的重要概念</h2><h3 id="TC-Transaction-Coordinator-事务协调者"><a href="#TC-Transaction-Coordinator-事务协调者" class="headerlink" title="TC (Transaction Coordinator) - 事务协调者"></a>TC (Transaction Coordinator) - 事务协调者</h3><p>&emsp;&emsp;维护全局和分支事务的状态，驱动全局事务提交或回滚。</p><h3 id="TM-Transaction-Manager-事务管理器"><a href="#TM-Transaction-Manager-事务管理器" class="headerlink" title="TM (Transaction Manager) - 事务管理器"></a>TM (Transaction Manager) - 事务管理器</h3><p>&emsp;&emsp;定义全局事务的范围：开始全局事务、提交或回滚全局事务。</p><h3 id="RM-Resource-Manager-资源管理器"><a href="#RM-Resource-Manager-资源管理器" class="headerlink" title="RM (Resource Manager) - 资源管理器"></a>RM (Resource Manager) - 资源管理器</h3><p>&emsp;&emsp;管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</p><h3 id="Transaction-ID：XID"><a href="#Transaction-ID：XID" class="headerlink" title="Transaction ID：XID"></a>Transaction ID：XID</h3><p>&emsp;&emsp;全局唯一的事务ID</p><h2 id="Seata的工作流程"><a href="#Seata的工作流程" class="headerlink" title="Seata的工作流程"></a>Seata的工作流程</h2><p>1、TM向TC申请开启一个全局事务，全局事务创建成功并生成一个全局唯一的XID；</p><p>2、XID在微服务调用链路的上下文中传播（也就是在多个TM、RM中传播）；</p><p>3、RM向TC注册分支事务，将其纳入XID对应全局事务的管辖；</p><p>4、TM向TC发起针对XID的全局提交或回滚决议；</p><p>5、TC调度XID下管辖的全部分支事务完成提交或回滚请求。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609076518331.png" alt="1609076518331"></p><h1 id="Seata的安装"><a href="#Seata的安装" class="headerlink" title="Seata的安装"></a>Seata的安装</h1><h2 id="下载Seata安装包"><a href="#下载Seata安装包" class="headerlink" title="下载Seata安装包"></a>下载Seata安装包</h2><p><a href="https://github.com/seata/seata/releases/tag/v1.4.0">https://github.com/seata/seata/releases/tag/v1.4.0</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609076589809.png" alt="1609076589809"></p><p>将下载的文件上传到linux虚拟机中</p><h2 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf seata-server-1.4.0.tar.gz </span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="修改file-conf"><a href="#修改file-conf" class="headerlink" title="修改file.conf"></a>修改file.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim conf/file.conf</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609076769140.png" alt="1609076769140">d </p><h3 id="修改registry-conf"><a href="#修改registry-conf" class="headerlink" title="修改registry.conf"></a>修改registry.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim conf/registry.conf</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609076869739.png" alt="1609076869739"></p><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>由于1.4.0版本没有配置对应的sql文件，所以在下边附上，创建一个名为seata的数据库，然后复制下面的内容执行即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`global_table`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`global_table`</span> (</span><br><span class="line">  <span class="string">`xid`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>)  <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`transaction_id`</span> <span class="built_in">BIGINT</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">TINYINT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`application_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">  <span class="string">`transaction_service_group`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">  <span class="string">`transaction_name`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>),</span><br><span class="line">  <span class="string">`timeout`</span> <span class="built_in">INT</span>,</span><br><span class="line">  <span class="string">`begin_time`</span> <span class="built_in">BIGINT</span>,</span><br><span class="line">  <span class="string">`application_data`</span> <span class="built_in">VARCHAR</span>(<span class="number">2000</span>),</span><br><span class="line">  <span class="string">`gmt_create`</span> DATETIME,</span><br><span class="line">  <span class="string">`gmt_modified`</span> DATETIME,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`xid`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_gmt_modified_status`</span> (<span class="string">`gmt_modified`</span>, <span class="string">`status`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_transaction_id`</span> (<span class="string">`transaction_id`</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- the table to store BranchSession data</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`branch_table`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`branch_table`</span> (</span><br><span class="line">  <span class="string">`branch_id`</span> <span class="built_in">BIGINT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`xid`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`transaction_id`</span> <span class="built_in">BIGINT</span> ,</span><br><span class="line">  <span class="string">`resource_group_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">  <span class="string">`resource_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">256</span>) ,</span><br><span class="line">  <span class="string">`lock_key`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>) ,</span><br><span class="line">  <span class="string">`branch_type`</span> <span class="built_in">VARCHAR</span>(<span class="number">8</span>) ,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">TINYINT</span>,</span><br><span class="line">  <span class="string">`client_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">  <span class="string">`application_data`</span> <span class="built_in">VARCHAR</span>(<span class="number">2000</span>),</span><br><span class="line">  <span class="string">`gmt_create`</span> DATETIME,</span><br><span class="line">  <span class="string">`gmt_modified`</span> DATETIME,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`branch_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_xid`</span> (<span class="string">`xid`</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- the table to store lock data</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`lock_table`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`lock_table`</span> (</span><br><span class="line">  <span class="string">`row_key`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`xid`</span> <span class="built_in">VARCHAR</span>(<span class="number">96</span>),</span><br><span class="line">  <span class="string">`transaction_id`</span> <span class="keyword">LONG</span> ,</span><br><span class="line">  <span class="string">`branch_id`</span> <span class="keyword">LONG</span>,</span><br><span class="line">  <span class="string">`resource_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">256</span>) ,</span><br><span class="line">  <span class="string">`table_name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) ,</span><br><span class="line">  <span class="string">`pk`</span> <span class="built_in">VARCHAR</span>(<span class="number">36</span>) ,</span><br><span class="line">  <span class="string">`gmt_create`</span> DATETIME ,</span><br><span class="line">  <span class="string">`gmt_modified`</span> DATETIME,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(<span class="string">`row_key`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./root/seata/bin/seata-server.sh</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609077056733.png" alt="1609077056733"></p><h1 id="Seata的使用"><a href="#Seata的使用" class="headerlink" title="Seata的使用"></a>Seata的使用</h1><h2 id="数据库的准备"><a href="#数据库的准备" class="headerlink" title="数据库的准备"></a>数据库的准备</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> seata_order;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_order(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"><span class="string">`user_id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line"><span class="string">`product_id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;产品id&#x27;</span>,</span><br><span class="line"><span class="string">`count`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line"><span class="string">`money`</span> <span class="built_in">DECIMAL</span>(<span class="number">11</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;金额&#x27;</span>,</span><br><span class="line"><span class="string">`status`</span> <span class="built_in">INT</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;订单状态：0：创建中; 1：已完结&#x27;</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> AUTO_INCREMENT=<span class="number">7</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------------- </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> seata_storage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_storage(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"><span class="string">`product_id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;产品id&#x27;</span>,</span><br><span class="line"><span class="string">`total`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;总库存&#x27;</span>,</span><br><span class="line"><span class="string">`used`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;已用库存&#x27;</span>,</span><br><span class="line"><span class="string">`residue`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;剩余库存&#x27;</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_storage(<span class="string">`id`</span>,<span class="string">`product_id`</span>,<span class="string">`total`</span>,<span class="string">`used`</span>,<span class="string">`residue`</span>)<span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------------- </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> seata_account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_account(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line"><span class="string">`user_id`</span> <span class="built_in">BIGINT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line"><span class="string">`total`</span> <span class="built_in">DECIMAL</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;总额度&#x27;</span>,</span><br><span class="line"><span class="string">`used`</span> <span class="built_in">DECIMAL</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;已用余额&#x27;</span>,</span><br><span class="line"><span class="string">`residue`</span> <span class="built_in">DECIMAL</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;剩余可用额度&#x27;</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_account(<span class="string">`id`</span>,<span class="string">`user_id`</span>,<span class="string">`total`</span>,<span class="string">`used`</span>,<span class="string">`residue`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1000</span>,<span class="number">0</span>,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h2 id="在每个数据库添加日志信息回滚表"><a href="#在每个数据库添加日志信息回滚表" class="headerlink" title="在每个数据库添加日志信息回滚表"></a>在每个数据库添加日志信息回滚表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`undo_log`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line"><span class="string">`branch_id`</span> <span class="built_in">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`xid`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`context`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`rollback_info`</span> LONGBLOB <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`log_status`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`log_created`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`log_modified`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`ext`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`ux_undo_log`</span> (<span class="string">`xid`</span>,<span class="string">`branch_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>最终效果展示：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1610271710787.png" alt="1610271710787"></p><h2 id="在nacos中添加各个微服务的配置"><a href="#在nacos中添加各个微服务的配置" class="headerlink" title="在nacos中添加各个微服务的配置"></a>在nacos中添加各个微服务的配置</h2><p>该步骤在以前的版本是将上面3.1和3.2的文件拷贝到每个微服务的resources目录下，到了现在的版本就可以配置到nacos上</p><h3 id="添加脚本nacos-config-sh到seata的conf"><a href="#添加脚本nacos-config-sh到seata的conf" class="headerlink" title="添加脚本nacos-config.sh到seata的conf"></a>添加脚本nacos-config.sh到seata的conf</h3><p><a href = 'https://github.com/seata/seata/blob/develop/script/config-center/nacos/nacos-config.sh'>获取地址点击此链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">opyright 1999-2019 Seata.io Group.</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you may not use this file except <span class="keyword">in</span> compliance with the License.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may obtain a copy of the License at、</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> distributed under the License is distributed on an <span class="string">&quot;AS IS&quot;</span> BASIS,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See the License <span class="keyword">for</span> the specific language governing permissions and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> limitations under the License.</span></span><br><span class="line"></span><br><span class="line">while getopts &quot;:h:p:g:t:u:w:&quot; opt</span><br><span class="line">do</span><br><span class="line">  case $opt in</span><br><span class="line">  h)</span><br><span class="line">    host=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  p)</span><br><span class="line">    port=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  g)</span><br><span class="line">    group=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  t)</span><br><span class="line">    tenant=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  u)</span><br><span class="line">    username=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  w)</span><br><span class="line">    password=$OPTARG</span><br><span class="line">    ;;</span><br><span class="line">  ?)</span><br><span class="line">    echo &quot; USAGE OPTION: $0 [-h host] [-p port] [-g group] [-t tenant] [-u username] [-w password] &quot;</span><br><span class="line">    exit 1</span><br><span class="line">    ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">urlencode() &#123;</span><br><span class="line">  for ((i=0; i &lt; $&#123;#1&#125;; i++))</span><br><span class="line">  do</span><br><span class="line">    char=&quot;$&#123;1:$i:1&#125;&quot;</span><br><span class="line">    case $char in</span><br><span class="line">    [a-zA-Z0-9.~_-]) printf $char ;;</span><br><span class="line">    *) printf &#x27;%%%02X&#x27; &quot;&#x27;$char&quot; ;;</span><br><span class="line">    esac</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [[ -z $&#123;host&#125; ]]; then</span><br><span class="line">    host=localhost</span><br><span class="line">fi</span><br><span class="line">if [[ -z $&#123;port&#125; ]]; then</span><br><span class="line">    port=8848</span><br><span class="line">fi</span><br><span class="line">if [[ -z $&#123;group&#125; ]]; then</span><br><span class="line">    group=&quot;SEATA_GROUP&quot;</span><br><span class="line">fi</span><br><span class="line">if [[ -z $&#123;tenant&#125; ]]; then</span><br><span class="line">    tenant=&quot;&quot;</span><br><span class="line">fi</span><br><span class="line">if [[ -z $&#123;username&#125; ]]; then</span><br><span class="line">    username=&quot;&quot;</span><br><span class="line">fi</span><br><span class="line">if [[ -z $&#123;password&#125; ]]; then</span><br><span class="line">    password=&quot;&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">nacosAddr=$host:$port</span><br><span class="line">contentType=&quot;content-type:application/json;charset=UTF-8&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;set nacosAddr=$nacosAddr&quot;</span><br><span class="line">echo &quot;set group=$group&quot;</span><br><span class="line"></span><br><span class="line">failCount=0</span><br><span class="line">tempLog=$(mktemp -u)</span><br><span class="line">function addConfig() &#123;</span><br><span class="line">  curl -X POST -H &quot;$&#123;contentType&#125;&quot; &quot;http://$nacosAddr/nacos/v1/cs/configs?dataId=$(urlencode $1)&amp;group=$group&amp;content=$(urlencode $2)&amp;tenant=$tenant&amp;username=$username&amp;password=$password&quot; &gt;&quot;$&#123;tempLog&#125;&quot; 2&gt;/dev/null</span><br><span class="line">  if [[ -z $(cat &quot;$&#123;tempLog&#125;&quot;) ]]; then</span><br><span class="line">    echo &quot; Please check the cluster status. &quot;</span><br><span class="line">    exit 1</span><br><span class="line">  fi</span><br><span class="line">  if [[ $(cat &quot;$&#123;tempLog&#125;&quot;) =~ &quot;true&quot; ]]; then</span><br><span class="line">    echo &quot;Set $1=$2 successfully &quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;Set $1=$2 failure &quot;</span><br><span class="line">    (( failCount++ ))</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count=0</span><br><span class="line">for line in $(cat $(dirname &quot;$PWD&quot;)/conf/config.txt | sed s/[[:space:]]//g); do</span><br><span class="line">  (( count++ ))</span><br><span class="line">key=$&#123;line%%=*&#125;</span><br><span class="line">    value=$&#123;line#*=&#125;</span><br><span class="line">addConfig &quot;$&#123;key&#125;&quot; &quot;$&#123;value&#125;&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;=========================================================================&quot;</span><br><span class="line">echo &quot; Complete initialization parameters,  total-count:$count ,  failure-count:$failCount &quot;</span><br><span class="line">echo &quot;=========================================================================&quot;</span><br><span class="line"></span><br><span class="line">if [[ $&#123;failCount&#125; -eq 0 ]]; then</span><br><span class="line">echo &quot; Init nacos config finished, please start seata-server. &quot;</span><br><span class="line">else</span><br><span class="line">echo &quot; init nacos config fail. &quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="添加配置文件config-txt到seata的conf目录"><a href="#添加配置文件config-txt到seata的conf目录" class="headerlink" title="添加配置文件config.txt到seata的conf目录"></a>添加配置文件config.txt到seata的conf目录</h3><p><a href = 'https://github.com/seata/seata/blob/develop/script/config-center/config.txt'>获取地址点击此链接</a></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">transport.type=TCP</span><br><span class="line">transport.server=NIO</span><br><span class="line">transport.heartbeat=true</span><br><span class="line">transport.enableClientBatchSendRequest=false</span><br><span class="line">transport.threadFactory.bossThreadPrefix=NettyBoss</span><br><span class="line">transport.threadFactory.workerThreadPrefix=NettyServerNIOWorker</span><br><span class="line">transport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler</span><br><span class="line">transport.threadFactory.shareBossWorker=false</span><br><span class="line">transport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector</span><br><span class="line">transport.threadFactory.clientSelectorThreadSize=1</span><br><span class="line">transport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread</span><br><span class="line">transport.threadFactory.bossThreadSize=1</span><br><span class="line">transport.threadFactory.workerThreadSize=default</span><br><span class="line">transport.shutdown.wait=3</span><br><span class="line">service.vgroupMapping.my_test_tx_group=default</span><br><span class="line">service.default.grouplist=127.0.0.1:8091</span><br><span class="line">service.enableDegrade=false</span><br><span class="line">service.disableGlobalTransaction=false</span><br><span class="line">client.rm.asyncCommitBufferLimit=10000</span><br><span class="line">client.rm.lock.retryInterval=10</span><br><span class="line">client.rm.lock.retryTimes=30</span><br><span class="line">client.rm.lock.retryPolicyBranchRollbackOnConflict=true</span><br><span class="line">client.rm.reportRetryCount=5</span><br><span class="line">client.rm.tableMetaCheckEnable=false</span><br><span class="line">client.rm.tableMetaCheckerInterval=60000</span><br><span class="line">client.rm.sqlParserType=druid</span><br><span class="line">client.rm.reportSuccessEnable=false</span><br><span class="line">client.rm.sagaBranchRegisterEnable=false</span><br><span class="line">client.tm.commitRetryCount=5</span><br><span class="line">client.tm.rollbackRetryCount=5</span><br><span class="line">client.tm.defaultGlobalTransactionTimeout=60000</span><br><span class="line">client.tm.degradeCheck=false</span><br><span class="line">client.tm.degradeCheckAllowTimes=10</span><br><span class="line">client.tm.degradeCheckPeriod=2000</span><br><span class="line">store.mode=file</span><br><span class="line">store.publicKey=1</span><br><span class="line">store.file.dir=file_store/data</span><br><span class="line">store.file.maxBranchSessionSize=16384</span><br><span class="line">store.file.maxGlobalSessionSize=512</span><br><span class="line">store.file.fileWriteBufferCacheSize=16384</span><br><span class="line">store.file.flushDiskMode=async</span><br><span class="line">store.file.sessionReloadReadSize=100</span><br><span class="line">store.db.datasource=druid</span><br><span class="line">store.db.dbType=mysql</span><br><span class="line">store.db.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">store.db.url=jdbc:mysql://127.0.0.1:3306/seata_order?useUnicode=true&amp;rewriteBatchedStatements=true</span><br><span class="line">store.db.user=root</span><br><span class="line">store.db.password=123456</span><br><span class="line">store.db.minConn=5</span><br><span class="line">store.db.maxConn=30</span><br><span class="line">store.db.globalTable=global_table</span><br><span class="line">store.db.branchTable=branch_table</span><br><span class="line">store.db.queryLimit=100</span><br><span class="line">store.db.lockTable=lock_table</span><br><span class="line">store.db.maxWait=5000</span><br><span class="line">store.redis.mode=single</span><br><span class="line">store.redis.single.host=127.0.0.1</span><br><span class="line">store.redis.single.port=6379</span><br><span class="line">store.redis.maxConn=10</span><br><span class="line">store.redis.minConn=1</span><br><span class="line">store.redis.maxTotal=100</span><br><span class="line">store.redis.database=0</span><br><span class="line">store.redis.password=123456</span><br><span class="line">store.redis.queryLimit=100</span><br><span class="line">server.recovery.committingRetryPeriod=1000</span><br><span class="line">server.recovery.asynCommittingRetryPeriod=1000</span><br><span class="line">server.recovery.rollbackingRetryPeriod=1000</span><br><span class="line">server.recovery.timeoutRetryPeriod=1000</span><br><span class="line">server.maxCommitRetryTimeout=-1</span><br><span class="line">server.maxRollbackRetryTimeout=-1</span><br><span class="line">server.rollbackRetryTimeoutUnlockEnable=false</span><br><span class="line">client.undo.dataValidation=true</span><br><span class="line">client.undo.logSerialization=jackson</span><br><span class="line">client.undo.onlyCareUpdateColumns=true</span><br><span class="line">server.undo.logSaveDays=7</span><br><span class="line">server.undo.logDeletePeriod=86400000</span><br><span class="line">client.undo.logTable=undo_log</span><br><span class="line">client.undo.compress.enable=true</span><br><span class="line">client.undo.compress.type=zip</span><br><span class="line">client.undo.compress.threshold=64k</span><br><span class="line">log.exceptionRate=100</span><br><span class="line">transport.serialization=seata</span><br><span class="line">transport.compressor=none</span><br><span class="line">metrics.enabled=false</span><br><span class="line">metrics.registryType=compact</span><br><span class="line">metrics.exporterList=prometheus</span><br><span class="line">metrics.exporterPrometheusPort=9898</span><br></pre></td></tr></table></figure><p>最重要的配置</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611586102169.png" alt="1611586102169"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611586065601.png" alt="1611586065601"></p><h3 id="3-3、执行命令将配置保存到nacos中"><a href="#3-3、执行命令将配置保存到nacos中" class="headerlink" title="3.3、执行命令将配置保存到nacos中"></a>3.3、执行命令将配置保存到nacos中</h3><p>由于配置相当多，所以最好是建立一个单独的空间来保存</p><p>该命令中 -t表示需要保存的空间，如果没有限制用户名和密码，则-u和-w这两个可以去掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh nacos-config.sh -h 127.0.0.1 -p 8848 -g SEATA_GROUP -t a82700f8-03c7-4b00-8ff7-95b51fee96cf -u nacos -w nacos</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611586837335.png" alt="1611586837335"></p><p>后续如果有需要修改的地方，可以在nacos直接修改，不需要重新执行脚本</p><h2 id="创建seata-order、seata-account、seata-storage三个微服务"><a href="#创建seata-order、seata-account、seata-storage三个微服务" class="headerlink" title="创建seata-order、seata-account、seata-storage三个微服务"></a>创建seata-order、seata-account、seata-storage三个微服务</h2><p>这里只说重要配置，详细可参考源码</p><h3 id="pom文件引入seata"><a href="#pom文件引入seata" class="headerlink" title="pom文件引入seata"></a>pom文件引入seata</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">seata:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable-auto-data-source-proxy:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tx-service-group:</span> <span class="string">my_test_tx_group</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">application:</span> <span class="string">seata-server</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">$&#123;linux.ip&#125;:80</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">SEATA_GROUP</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">&quot;a82700f8-03c7-4b00-8ff7-95b51fee96cf&quot;</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">$&#123;linux.ip&#125;:80</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">SEATA_GROUP</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">vgroup-mapping:</span></span><br><span class="line">      <span class="attr">my_test_tx_group:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">grouplist:</span></span><br><span class="line">      <span class="attr">default:</span> <span class="string">$&#123;linux.ip&#125;:8091</span></span><br><span class="line">    <span class="attr">disable-global-transaction:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">rm:</span></span><br><span class="line">      <span class="attr">report-success-enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611587920538.png" alt="1611587920538"></p><h3 id="在需要进行分布式操作的接口上添加-GlobalTransactional注解"><a href="#在需要进行分布式操作的接口上添加-GlobalTransactional注解" class="headerlink" title="在需要进行分布式操作的接口上添加@GlobalTransactional注解"></a>在需要进行分布式操作的接口上添加@GlobalTransactional注解</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611672434484.png" alt="1611672434484"></p><p><font color='red'><strong>注意各个服务的服务都必须配置和seata-server在相同的空间中，否则后续会出现各种奇怪的问题</strong></font></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611588088719.png" alt="1611588088719"></p><p><font color='red'><strong>服务启动后，seata的服务端会有RM和TM连接的展示</strong></font></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611670632746.png" alt="1611670632746"></p><p><font color='red'><strong>各个子服务也有相应连接</strong></font></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611670859404.png" alt="1611670859404"></p><p>测试</p><p>1、测试创建订单   <a href="http://127.0.0.1:8801/order/create">http://127.0.0.1:8801/order/create</a></p><p>首先测试正常情况下，订单生成成功，库存扣减、账户扣减成功</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671241904.png" alt="1611671241904"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671236685.png" alt="1611671236685"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671770888.png" alt="1611671770888"></p><p>接着，测试不正常的情况，我们把数量设置为100，因为我们当前的库存已经不足100，所以此时扣减100库存的话，就会发生意外，但是，由于订单已经生成，如果seata的分布式事务有效的话，我们的订单就应该能够回滚成功。我们发现异常后，查看数据库，订单为保存，库存和余额也没有扣减，分布式事务生效。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671328435.png" alt="1611671328435"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671426528.png" alt="1611671426528"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671904291.png" alt="1611671904291"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1611671990045.png" alt="1611671990045"></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloudAlibaba </category>
          
          <category> Seata </category>
          
          <category> 分布式事务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式事务 </tag>
            
            <tag> Seata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装软件</title>
      <link href="/blog/2021/02/14/Linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
      <url>/blog/2021/02/14/Linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5pz'>Linux安装软件</font></p><h1 id="Linux安装mysql"><a href="#Linux安装mysql" class="headerlink" title="Linux安装mysql"></a>Linux安装mysql</h1><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p>下载地址：<a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203094022147.png" alt="image-20210203094022147"></p><p>下载完成后，放入Linux环境</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="检测环境是否自带mysql，有的话强制卸载"><a href="#检测环境是否自带mysql，有的话强制卸载" class="headerlink" title="检测环境是否自带mysql，有的话强制卸载"></a>检测环境是否自带mysql，有的话强制卸载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mysql</span><br><span class="line"></span><br><span class="line">rpm -e --nodeps mysql-libs-5.1.52-1.el6_0.1.x86_64(对应包名)</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203094806691.png" alt="image-20210203094806691"></p><h3 id="检测环境是否自带mariadb，有的话强制卸载"><a href="#检测环境是否自带mariadb，有的话强制卸载" class="headerlink" title="检测环境是否自带mariadb，有的话强制卸载"></a>检测环境是否自带mariadb，有的话强制卸载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br><span class="line"></span><br><span class="line">rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64(对应包名)</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203094932667.png" alt="image-20210203094932667"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="解压安装包到指定目录"><a href="#解压安装包到指定目录" class="headerlink" title="解压安装包到指定目录"></a>解压安装包到指定目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure><h3 id="将mysql的文件名进行修改"><a href="#将mysql的文件名进行修改" class="headerlink" title="将mysql的文件名进行修改"></a>将mysql的文件名进行修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-5.7.28-linux-glibc2.12-x86_64 mysql-5.7.28</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203095720658.png" alt="image-20210203095720658"></p><h3 id="检查mysql组和用户是否存在，如果没有则创建"><a href="#检查mysql组和用户是否存在，如果没有则创建" class="headerlink" title="检查mysql组和用户是否存在，如果没有则创建"></a>检查mysql组和用户是否存在，如果没有则创建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/group|grep mysql</span><br><span class="line"></span><br><span class="line">groupadd mysql</span><br><span class="line"></span><br><span class="line">useradd -r -g mysql mysql　　#useradd -r参数表示mysql用户是系统用户，不可用于登录系统</span><br></pre></td></tr></table></figure><h3 id="创建data目录"><a href="#创建data目录" class="headerlink" title="创建data目录"></a>创建data目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd mysql-5.7.28</span><br><span class="line"></span><br><span class="line">mkdir data</span><br></pre></td></tr></table></figure><h3 id="将-usr-local-mysql-5-7-28的所有者及所属组改为mysql"><a href="#将-usr-local-mysql-5-7-28的所有者及所属组改为mysql" class="headerlink" title="将/usr/local/mysql-5.7.28的所有者及所属组改为mysql"></a>将/usr/local/mysql-5.7.28的所有者及所属组改为mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql /usr/local/mysql-5.7.28</span><br></pre></td></tr></table></figure><h3 id="在-usr-local-mysql-5-7-28-support-files目录下创建my-default-cnf"><a href="#在-usr-local-mysql-5-7-28-support-files目录下创建my-default-cnf" class="headerlink" title="在/usr/local/mysql-5.7.28/support-files目录下创建my_default.cnf"></a>在/usr/local/mysql-5.7.28/support-files目录下创建my_default.cnf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim support-files/my_default.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置mysql的安装目录</span></span><br><span class="line">basedir =/usr/local/mysql-5.7.28</span><br><span class="line"><span class="meta">#</span><span class="bash">设置mysql数据库的数据存放目录</span></span><br><span class="line">datadir = /usr/local/mysql-5.7.28/data</span><br><span class="line"><span class="meta">#</span><span class="bash">设置端口</span></span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"><span class="meta">#</span><span class="bash">设置字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="meta">#</span><span class="bash">日志存放目录</span></span><br><span class="line">log-error = /usr/local/mysql-5.7.28/data/mysqld.log</span><br><span class="line">pid-file = /usr/local/mysql-5.7.28/data/mysqld.pid</span><br><span class="line"><span class="meta">#</span><span class="bash">允许时间类型的数据为零(去掉NO_ZERO_IN_DATE,NO_ZERO_DATE)</span></span><br><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"><span class="meta">#</span><span class="bash">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203104420394.png" alt="image-20210203104420394"></p><p>拷贝到/etc/my.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/my_default.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><h3 id="初始化Mysql"><a href="#初始化Mysql" class="headerlink" title="初始化Mysql"></a>初始化Mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql-5.7.28/ --datadir=/usr/local/mysql-5.7.28/data/</span><br><span class="line">初始化完成后，查看日志，如图，红框处为密码</span><br><span class="line">cat /usr/local/mysql-5.7.28/data/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203105340009.png" alt="image-20210203105340009"></p><h3 id="把启动脚本放到开机初始化目录"><a href="#把启动脚本放到开机初始化目录" class="headerlink" title="把启动脚本放到开机初始化目录"></a>把启动脚本放到开机初始化目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysql</span><br></pre></td></tr></table></figure><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203105834846.png" alt="image-20210203105834846"></p><h3 id="进入mysql并更改密码，初始密码为1-3-7红框处"><a href="#进入mysql并更改密码，初始密码为1-3-7红框处" class="headerlink" title="进入mysql并更改密码，初始密码为1.3.7红框处"></a>进入mysql并更改密码，初始密码为1.3.7红框处</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">./bin/mysql -u root -p</span><br><span class="line"></span><br><span class="line">-- 修改密码</span><br><span class="line"></span><br><span class="line">set password=password(&#x27;123456&#x27;);</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">-- 添加远程访问权限（这一步正常不需要）</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use mysql;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> update user <span class="built_in">set</span> host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user = <span class="string">&#x27;root&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line"></span><br><span class="line">如果更改时报错：ERROR 1062 (23000): Duplicate entry &#x27;%-root&#x27; for key &#x27;PRIMARY&#x27;，就先查询一下是否已更改，最后执行刷新。</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203110726831.png" alt="image-20210203110726831"></p><h3 id="修改完成后，退出重启mysql"><a href="#修改完成后，退出重启mysql" class="headerlink" title="修改完成后，退出重启mysql"></a>修改完成后，退出重启mysql</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203110801140.png" alt="image-20210203110801140"></p><h3 id="测试安装情况"><a href="#测试安装情况" class="headerlink" title="测试安装情况"></a>测试安装情况</h3><h4 id="a、开放端口"><a href="#a、开放端口" class="headerlink" title="a、开放端口"></a>a、开放端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203111019106.png" alt="image-20210203111019106"></p><h4 id="b、使用连接工具连接"><a href="#b、使用连接工具连接" class="headerlink" title="b、使用连接工具连接"></a>b、使用连接工具连接</h4><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203113223908.png" alt="image-20210203113223908"></p><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><h3 id="复制mysql-server"><a href="#复制mysql-server" class="headerlink" title="复制mysql.server"></a>复制mysql.server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/mysql-5.7.28/support-files/mysql.server /etc/rc.d/init.d/mysqld                           </span><br></pre></td></tr></table></figure><h3 id="赋予可执行权限"><a href="#赋予可执行权限" class="headerlink" title="赋予可执行权限"></a>赋予可执行权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/mysqld</span><br></pre></td></tr></table></figure><h3 id="添加为服务"><a href="#添加为服务" class="headerlink" title="添加为服务"></a>添加为服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add mysqld</span><br></pre></td></tr></table></figure><h3 id="查看服务列表"><a href="#查看服务列表" class="headerlink" title="查看服务列表"></a>查看服务列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203113758438.png" alt="image-20210203113758438"></p><p>如果看到3、4、5状态为开或者为 on 则表示成功。如果是 关或者 off 则执行一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 345 mysqld on</span><br></pre></td></tr></table></figure><p>至此、Linux安装mysql结束</p><h1 id="Linux安装zookeeper"><a href="#Linux安装zookeeper" class="headerlink" title="Linux安装zookeeper"></a>Linux安装zookeeper</h1><h2 id="下载安装包-3-6-2为当前稳定版"><a href="#下载安装包-3-6-2为当前稳定版" class="headerlink" title="下载安装包(3.6.2为当前稳定版)"></a>下载安装包(3.6.2为当前稳定版)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><h3 id="解压安装包到指定目录-并修改文件命名"><a href="#解压安装包到指定目录-并修改文件命名" class="headerlink" title="解压安装包到指定目录,并修改文件命名"></a>解压安装包到指定目录,并修改文件命名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar zxf apache-zookeeper-3.6.2-bin.tar.gz -C /usr/local</span><br><span class="line"></span><br><span class="line">mv cd /usr/local &amp;&amp; apache-zookeeper-3.6.2-bin/ zookeeper-3.6.2</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203115332142.png" alt="image-20210203115332142"></p><h3 id="复制zoo-sample-cfg为zoo-cfg"><a href="#复制zoo-sample-cfg为zoo-cfg" class="headerlink" title="复制zoo_sample.cfg为zoo.cfg"></a>复制zoo_sample.cfg为zoo.cfg</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/zookeeper-3.6.2/conf &amp;&amp; cp zoo_sample.cfg  zoo.cfg</span><br></pre></td></tr></table></figure><h3 id="修改zoo-cfg配置文件"><a href="#修改zoo-cfg配置文件" class="headerlink" title="修改zoo.cfg配置文件"></a>修改zoo.cfg配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/usr/local/zookeeper-3.6.2/data</span><br><span class="line">dataLogDir=/usr/local/zookeeper-3.6.2/log</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203134920805.png" alt="image-20210203134920805"></p><p><font color='red' size='4.5px'><strong>修改配置后需要在zookeeper-3.6.2目录下创建data和log两个文件夹来保存数据和日志</strong></font></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203135701077.png" alt="image-20210203135701077"></p><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export ZOOKEEPER_INSTALL=/usr/local/zookeeper-3.6.2/</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$ZOOKEEPER_INSTALL/bin</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203141417540.png" alt="image-20210203141417540"></p><h3 id="启动zookeeper"><a href="#启动zookeeper" class="headerlink" title="启动zookeeper"></a>启动zookeeper</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh zkServer.sh start</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203141629244.png" alt="image-20210203141629244"></p><h3 id="查看zookeeper状态"><a href="#查看zookeeper状态" class="headerlink" title="查看zookeeper状态"></a>查看zookeeper状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203141731035.png" alt="image-20210203141731035"></p><h3 id="查看zookeeper进程"><a href="#查看zookeeper进程" class="headerlink" title="查看zookeeper进程"></a>查看zookeeper进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux|grep &#x27;zookeeper&#x27;</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/image-20210203141819414.png" alt="image-20210203141819414"></p><h3 id="关闭zookeeper"><a href="#关闭zookeeper" class="headerlink" title="关闭zookeeper"></a>关闭zookeeper</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh zkServer.sh stop</span><br></pre></td></tr></table></figure><p>至此、Linux安装zookeeper结束</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 安装 </tag>
            
            <tag> mysql </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK8新特性——时间类</title>
      <link href="/blog/2020/12/16/JDK8%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E7%B1%BB/"/>
      <url>/blog/2020/12/16/JDK8%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'>JDK8新特性——时间类</font></p><h1 id="为什么需要使用新的时间类"><a href="#为什么需要使用新的时间类" class="headerlink" title="为什么需要使用新的时间类"></a>为什么需要使用新的时间类</h1><p>1、Date如果不格式化，打印出的日期可读性差【Tue Sep 10 09:34:04 CST 2019】；</p><p>2、使用 SimpleDateFormat 对时间进行格式化，但 SimpleDateFormat 是线程不安全的；</p><p>3、获取时间一些参数需要转换为calendar类获取……</p><h1 id="JDK8新特性提供的时间操作类"><a href="#JDK8新特性提供的时间操作类" class="headerlink" title="JDK8新特性提供的时间操作类"></a>JDK8新特性提供的时间操作类</h1><p>1、LocalDate    【日期】</p><p>2、LocalTime    【时间】</p><p>3、LocalDateTime    【日期时间】</p><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="获取当前日期"><a href="#获取当前日期" class="headerlink" title="获取当前日期"></a>获取当前日期</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate = LocalDate.now();</span><br></pre></td></tr></table></figure><h2 id="构造指定的年月日"><a href="#构造指定的年月日" class="headerlink" title="构造指定的年月日"></a>构造指定的年月日</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate1 = LocalDate.of(<span class="number">2019</span>, <span class="number">9</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalTime localTime = LocalTime.now();</span><br></pre></td></tr></table></figure><h2 id="构造指定的时分秒"><a href="#构造指定的时分秒" class="headerlink" title="构造指定的时分秒"></a>构造指定的时分秒</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalTime localTime1 = LocalTime.of(<span class="number">12</span>, <span class="number">9</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="获取当前时日"><a href="#获取当前时日" class="headerlink" title="获取当前时日"></a>获取当前时日</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br></pre></td></tr></table></figure><h2 id="构造指定的时日"><a href="#构造指定的时日" class="headerlink" title="构造指定的时日"></a>构造指定的时日</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime1 = LocalDateTime.of(<span class="number">2019</span>, Month.SEPTEMBER, <span class="number">10</span>, <span class="number">14</span>, <span class="number">46</span>, <span class="number">56</span>);</span><br></pre></td></tr></table></figure><h2 id="获取时间的某一个值"><a href="#获取时间的某一个值" class="headerlink" title="获取时间的某一个值"></a>获取时间的某一个值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> year = localDateTime1.getYear();   <span class="comment">//2020  年份</span></span><br><span class="line">Month month = localDateTime1.getMonth();   <span class="comment">//JUNE  月份</span></span><br><span class="line"><span class="keyword">int</span> monthValue = localDateTime1.getMonthValue();   <span class="comment">//6  月份数值</span></span><br><span class="line"><span class="keyword">int</span> day = localDateTime1.getDayOfMonth();   <span class="comment">//28  日期</span></span><br><span class="line">DayOfWeek dayOfWeek = localDateTime1.getDayOfWeek();   <span class="comment">//SUNDAY  周</span></span><br><span class="line"><span class="keyword">int</span> dayOfYear = localDateTime1.getDayOfYear();   <span class="comment">//180  年的第几天</span></span><br><span class="line"><span class="keyword">int</span> hour = localDateTime1.getHour();   <span class="comment">//13 小时</span></span><br><span class="line"><span class="keyword">int</span> minute = localDateTime1.getMinute();   <span class="comment">//51  分钟</span></span><br><span class="line"><span class="keyword">int</span> second = localDateTime1.getSecond();   <span class="comment">//19  秒</span></span><br></pre></td></tr></table></figure><h2 id="LocalDateTime、LocalDate、LocalTime的转换"><a href="#LocalDateTime、LocalDate、LocalTime的转换" class="headerlink" title="LocalDateTime、LocalDate、LocalTime的转换"></a>LocalDateTime、LocalDate、LocalTime的转换</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime = LocalDateTime.of(localDate, localTime);</span><br><span class="line">LocalDateTime localDateTime = localDate.atTime(localTime);</span><br><span class="line">LocalDateTime localDateTime = localTime.atDate(localDate);</span><br><span class="line">LocalDate localDate = localDateTime.toLocalDate();</span><br><span class="line">LocalTime localTime = localDateTime.toLocalTime();</span><br></pre></td></tr></table></figure><h2 id="将某个时间增加"><a href="#将某个时间增加" class="headerlink" title="将某个时间增加"></a>将某个时间增加</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localDateTime = localDateTime.plus(<span class="number">2</span>,ChronoUnit.YEARS);  <span class="comment">//增加2年</span></span><br><span class="line">localDateTime = localDateTime.plusYears(<span class="number">2</span>);  <span class="comment">//增加2年</span></span><br></pre></td></tr></table></figure><h2 id="将某个时间减少"><a href="#将某个时间减少" class="headerlink" title="将某个时间减少"></a>将某个时间减少</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localDateTime = localDateTime.minus(<span class="number">2</span>,ChronoUnit.YEARS);  <span class="comment">//减少2年</span></span><br><span class="line">localDateTime = localDateTime.minusYears(<span class="number">2</span>);  <span class="comment">//减少2年</span></span><br></pre></td></tr></table></figure><h2 id="将某个时间参数指定"><a href="#将某个时间参数指定" class="headerlink" title="将某个时间参数指定"></a>将某个时间参数指定</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localDateTime1 = localDateTime1.with(ChronoField.MONTH_OF_YEAR,<span class="number">1</span>);  <span class="comment">//指定月份为1月</span></span><br><span class="line">localDateTime1 = localDateTime1.withHour(<span class="number">2</span>);  <span class="comment">//指定小时为2时</span></span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">localDateTime.with(firstDayOfYear());  <span class="comment">//获取当年的第一天</span></span><br><span class="line">localDateTime.with(firstDayOfMonth());  <span class="comment">//获取当月的第一天</span></span><br><span class="line">localDateTime.with(firstDayOfNextYear());  <span class="comment">//获取下年的第一天</span></span><br><span class="line">localDateTime.with(firstDayOfNextMonth());  <span class="comment">//获取下月的第一天</span></span><br><span class="line">localDateTime.with(firstInMonth(DayOfWeek.MONDAY));  <span class="comment">//获取当月第一个星期一的时间</span></span><br><span class="line">localDateTime.with(lastDayOfYear());  <span class="comment">//获取上年的第一天</span></span><br><span class="line">localDateTime.with(lastDayOfMonth());  <span class="comment">//获取上月的第一天</span></span><br><span class="line">localDateTime.with(lastInMonth(DayOfWeek.MONDAY));  <span class="comment">//获取当月最后一个星期一的时间</span></span><br></pre></td></tr></table></figure><h2 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认提供了几种格式时间的方式【一般不用】</span></span><br><span class="line">String s1 = localDateTime.format(DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">String s2 = localDateTime.format(DateTimeFormatter.ISO_DATE_TIME);</span><br><span class="line"><span class="comment">//自定义格式化时间的方式</span></span><br><span class="line">DateTimeFormatter dateTimeFormatter =   DateTimeFormatter.ofPattern(<span class="string">&quot;dd/MM/yyyy/hh/mm/ss&quot;</span>);</span><br><span class="line">String s3 = localDateTime.format(dateTimeFormatter);</span><br></pre></td></tr></table></figure><h2 id="字符串解析时间"><a href="#字符串解析时间" class="headerlink" title="字符串解析时间"></a>字符串解析时间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate1 &#x3D; LocalDate.parse(&quot;20190910&quot;, DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">LocalDate localDate2 &#x3D; LocalDate.parse(&quot;2019-09-10&quot;, DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class="line">DateTimeFormatter dateTimeFormatter &#x3D;   DateTimeFormatter.ofPattern(&quot;dd&#x2F;MM&#x2F;yyyy&#x2F;hh&#x2F;mm&#x2F;ss&quot;);</span><br><span class="line">LocalDate localDate3 &#x3D; LocalDate.parse(&quot;28&#x2F;06&#x2F;2020&#x2F;02&#x2F;28&#x2F;46&quot;, dateTimeFormatter);</span><br></pre></td></tr></table></figure><h2 id="Timestamp与LocalDateTime的转换"><a href="#Timestamp与LocalDateTime的转换" class="headerlink" title="Timestamp与LocalDateTime的转换"></a>Timestamp与LocalDateTime的转换</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime1 = <span class="keyword">new</span> Timestamp(System.currentTimeMillis()).toLocalDateTime();</span><br></pre></td></tr></table></figure><h2 id="LocalDateTime与Long（时间戳）的转换"><a href="#LocalDateTime与Long（时间戳）的转换" class="headerlink" title="LocalDateTime与Long（时间戳）的转换"></a>LocalDateTime与Long（时间戳）的转换</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime = (<span class="keyword">new</span> Timestamp(System.currentTimeMillis())).toLocalDateTime();</span><br><span class="line"><span class="keyword">long</span> time = localDateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();</span><br></pre></td></tr></table></figure><h2 id="时间的比较"><a href="#时间的比较" class="headerlink" title="时间的比较"></a>时间的比较</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime = LocalDateTime.of(<span class="number">1994</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">LocalDateTime localDateTime4 = LocalDateTime.now();</span><br><span class="line">System.out.println(localDateTime.isBefore(localDateTime4));</span><br><span class="line">System.out.println(localDateTime.isAfter(localDateTime4));</span><br></pre></td></tr></table></figure><h2 id="计算时间间隔（Duration类和Period类）"><a href="#计算时间间隔（Duration类和Period类）" class="headerlink" title="计算时间间隔（Duration类和Period类）"></a>计算时间间隔（Duration类和Period类）</h2><p>使用场景【计算年龄、合同时间等。。。】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime localDateTime = LocalDateTime.of(<span class="number">1994</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">LocalDateTime localDateTime4 = LocalDateTime.now();</span><br><span class="line">Duration duration = Duration.between(localDateTime,localDateTime4);</span><br><span class="line"><span class="comment">//间隔多少天</span></span><br><span class="line"><span class="keyword">long</span> days = duration.toDays();</span><br><span class="line"><span class="comment">//间隔多少小时</span></span><br><span class="line"><span class="keyword">long</span> hours = duration.toHours();</span><br><span class="line"><span class="comment">//间隔多少分钟</span></span><br><span class="line"><span class="keyword">long</span> minutes = duration.toMinutes();</span><br><span class="line">Period period2 = Period.between(localDateTime.toLocalDate(),localDateTime4.toLocalDate());</span><br><span class="line"><span class="comment">//间隔多少年</span></span><br><span class="line"><span class="keyword">int</span> years = period2.getYears();</span><br><span class="line"><span class="comment">//间隔多少月（只计算月份，不计年）</span></span><br><span class="line"><span class="keyword">int</span> months = period2.getMonths();</span><br><span class="line"><span class="comment">//间隔多少月（计算年）</span></span><br><span class="line"><span class="keyword">long</span> toTotalMonths = period2.toTotalMonths();</span><br></pre></td></tr></table></figure><h1 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> java.time.*;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateTimeUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;HHmmss&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter YEAR_MONTH_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter SHORT_DATE_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter SHORT_DATETIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyyMMddHHmmss&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter LONG_DATETIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter ABC_DATE_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter ABC_TIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;HH:mm:ss&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter ABC_DATETIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy/MM/dd HH:mm:ss&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DateTimeFormatter ABC_SHORT_DATETIME_FORMATTER = DateTimeFormatter.ofPattern(<span class="string">&quot;yyMMddHHmmss&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  将旧格式字符串日期 转换成新格式字符串日期</span></span><br><span class="line"><span class="comment">     *  格式转换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateStrConvertDateStrFromLocalDateTime</span><span class="params">(String dateStr,DateTimeFormatter oldDateTimeFormatter,DateTimeFormatter newDateTimeFormatter)</span></span>&#123;</span><br><span class="line">       LocalDateTime localDateTime = LocalDateTime.parse(dateStr, oldDateTimeFormatter);</span><br><span class="line">       <span class="keyword">return</span> localDateTime.format(newDateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  将旧格式字符串日期 转换成新格式字符串日期</span></span><br><span class="line"><span class="comment">     *  格式转换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateStrConvertDateStrFromLocalDate</span><span class="params">(String dateStr,DateTimeFormatter oldDateTimeFormatter,DateTimeFormatter newDateTimeFormatter)</span></span>&#123;</span><br><span class="line">        LocalDate localDate = LocalDate.parse(dateStr, oldDateTimeFormatter);</span><br><span class="line">       <span class="keyword">return</span> localDate.format(newDateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  将字符串日期转换成date类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">dateStrConvertDate</span><span class="params">(String dateStr,DateTimeFormatter dateTimeFormatter)</span></span>&#123;</span><br><span class="line">        LocalDateTime parse = LocalDateTime.parse(dateStr, dateTimeFormatter);</span><br><span class="line">        <span class="comment">// 获得 Instant</span></span><br><span class="line">        Instant instant = Instant.ofEpochSecond(parse.toEpochSecond(ZoneOffset.ofHours(<span class="number">8</span>)));</span><br><span class="line">        <span class="comment">// 获得 Date</span></span><br><span class="line">        <span class="keyword">return</span> Date.from(instant);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  将date类型转换成字符串日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateConvertDateStr</span><span class="params">(Date date,DateTimeFormatter dateTimeFormatter)</span></span>&#123;</span><br><span class="line">        LocalDateTime localDateTime = date.toInstant().atOffset(ZoneOffset.ofHours(<span class="number">8</span>)).toLocalDateTime();</span><br><span class="line">        <span class="keyword">return</span> localDateTime.format(dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将date转换成localdate</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title">dateConvertLocalDate</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date.toInstant().atOffset(ZoneOffset.ofHours(<span class="number">8</span>)).toLocalDate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将date转换成localDateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">dateConvertLocalDateTime</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date.toInstant().atOffset(ZoneOffset.ofHours(<span class="number">8</span>)).toLocalDateTime();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将localdate转换成date(时分秒为零)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">localDateConvertDate</span><span class="params">(LocalDate localDate)</span></span>&#123;</span><br><span class="line">        Instant instant = localDate.atStartOfDay(ZoneOffset.ofHours(<span class="number">8</span>)).toInstant();</span><br><span class="line">        <span class="comment">// 获得 Date</span></span><br><span class="line">        <span class="keyword">return</span> Date.from(instant);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将localDateTime转换成date</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">localDateTimeConvertDate</span><span class="params">(LocalDateTime localDateTime)</span></span>&#123;</span><br><span class="line">        Instant instant = Instant.ofEpochSecond(localDateTime.toEpochSecond(ZoneOffset.ofHours(<span class="number">8</span>)));</span><br><span class="line">        <span class="comment">// 获得 Date</span></span><br><span class="line">        <span class="keyword">return</span> Date.from(instant);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前的日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title">getCurrentLocalDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.now();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalTime <span class="title">getCurrentLocalTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">getCurrentLocalDateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期字符串以“yyyy-MM-dd”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDateStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.now().format(DATE_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期字符串以“yyMMdd”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentShortDateStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.now().format(SHORT_DATE_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期字符串以“yyyy-MM”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentMonthStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.now().format(YEAR_MONTH_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期时间字符串以“yyyy-MM-dd HH:mm:ss”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDateTimeStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.now().format(DATETIME_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期时间字符串以“yyyy-MM-dd HH:mm:ss SSS”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentLongDateTimeStr</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.now().format(LONG_DATETIME_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前日期时间字符串以“yyMMddHHmmss”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentShortDateTimeStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.now().format(SHORT_DATETIME_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前时间字符串以“HHmmss”格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTimeStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalTime.now().format(TIME_FORMATTER);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前时间日期字符串以指定的字符串格式返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDateTimeStr</span><span class="params">(String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.now().format(DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将指定日期格式的字符串转为LocalDate</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title">parseLocalDate</span><span class="params">(String dateStr, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将指定日期格式的字符串转为LocalDateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">parseLocalDateTime</span><span class="params">(String dateTimeStr, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将指定日期格式的字符串转为LocalTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalTime <span class="title">parseLocalTime</span><span class="params">(String timeStr, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalTime.parse(timeStr, DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatLocalDate</span><span class="params">(LocalDate date, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date.format(DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalDateTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatLocalDateTime</span><span class="params">(LocalDateTime datetime, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> datetime.format(DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatLocalTime</span><span class="params">(LocalTime time, String pattern)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> time.format(DateTimeFormatter.ofPattern(pattern));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title">formatLocalDate</span><span class="params">(String dateStr,DateTimeFormatter dateTimeFormatter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDate.parse(dateStr, dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalDateTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">formatLocalDateTime</span><span class="params">(String dateTimeStr,DateTimeFormatter dateTimeFormatter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.parse(dateTimeStr, dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将LocalTime转为指定日期格式的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalTime <span class="title">formatLocalTime</span><span class="params">(String longDateTimeStr,DateTimeFormatter dateTimeFormatter)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LocalTime.parse(longDateTimeStr, dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 两个日期相隔秒数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">periodHours</span><span class="params">(LocalDateTime startDateTime,LocalDateTime endDateTime)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Duration.between(startDateTime, endDateTime).get(ChronoUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 两个日期相隔天数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">periodDays</span><span class="params">(LocalDate startDate, LocalDate endDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startDate.until(endDate, ChronoUnit.DAYS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 两个日期相隔周数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">periodWeeks</span><span class="params">(LocalDate startDate, LocalDate endDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startDate.until(endDate, ChronoUnit.WEEKS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 两个日期相隔月数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">periodMonths</span><span class="params">(LocalDate startDate, LocalDate endDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startDate.until(endDate, ChronoUnit.MONTHS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 两个日期相隔年数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">periodYears</span><span class="params">(LocalDate startDate, LocalDate endDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startDate.until(endDate, ChronoUnit.YEARS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否当天</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isToday</span><span class="params">(LocalDate date)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getCurrentLocalDate().equals(date);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据LocalDateTime获取时间日期的毫秒数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title">localDateTimeToEpochMilli</span><span class="params">(LocalDateTime dateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据时间毫秒数获取LocalDateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">epochMilliToLocalDateTime</span><span class="params">(Long timeMillis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> Timestamp(timeMillis)).toLocalDateTime();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据LocalDateTime获取Timestamp</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Timestamp <span class="title">localDateTimeToTimestamp</span><span class="params">(LocalDateTime dateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Timestamp(dateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Timestamp获取LocalDateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">localDateTimeToTimestamp</span><span class="params">(Timestamp timestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timestamp.toLocalDateTime();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否为闰年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLeapYear</span><span class="params">(LocalDate localDate)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> localDate.isLeapYear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断时间A是否在时间B之前</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isBefore</span><span class="params">(LocalDateTime localDateTimeA,LocalDateTime localDateTimeB)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> localDateTimeA.isBefore(localDateTimeB);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断时间A是否在时间B之后</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAfter</span><span class="params">(LocalDateTime localDateTimeA,LocalDateTime localDateTimeB)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> localDateTimeA.isAfter(localDateTimeB);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据合同开始时间和合同年限获取合同结束时间（整数年）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">getContractEndTimeByYear</span><span class="params">(LocalDateTime startTime,<span class="keyword">long</span> years)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startTime.plusYears(years).minusSeconds(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据合同开始时间和合同年限获取合同结束时间(非整数年)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">getContractEndTimeByMonth</span><span class="params">(LocalDateTime startTime,<span class="keyword">long</span> monthValues)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startTime.plusMonths(monthValues).minusSeconds(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="时间相应注解"><a href="#时间相应注解" class="headerlink" title="时间相应注解"></a>时间相应注解</h1><h2 id="将返回时间转为指定字符串格式"><a href="#将返回时间转为指定字符串格式" class="headerlink" title="将返回时间转为指定字符串格式"></a>将返回时间转为指定字符串格式</h2><p>@JsonFormat(pattern = “yyyy-MM-dd HH:mm:ss”, timezone = “GMT+8”)</p><h2 id="时间入参格式化"><a href="#时间入参格式化" class="headerlink" title="时间入参格式化"></a>时间入参格式化</h2><p>@DateTimeFormat(pattern = “yyyy-MM-dd”)</p><p>@DateTimeFormat(pattern = “yyyy-MM-dd HH:mm:ss”)</p>]]></content>
      
      
      <categories>
          
          <category> JDK8新特性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK8 </tag>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel的介绍与使用（一）</title>
      <link href="/blog/2020/12/16/Sentinel%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/blog/2020/12/16/Sentinel%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'><strong>Sentinel的介绍与使用（一）</strong></font></p><h1 id="Sentinel的介绍"><a href="#Sentinel的介绍" class="headerlink" title="Sentinel的介绍"></a>Sentinel的介绍</h1><h2 id="什么是Sentinel？"><a href="#什么是Sentinel？" class="headerlink" title="什么是Sentinel？"></a>什么是Sentinel？</h2><p>​        Sentinel是阿里开源的项目，主要以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度来帮助用户提升服务的稳定性。</p><p>中文官网路径：<a href="http://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D">http://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D</a></p><h2 id="Sentinel的主要特性"><a href="#Sentinel的主要特性" class="headerlink" title="Sentinel的主要特性"></a>Sentinel的主要特性</h2><p><img src="http://cheng_qiwei.gitee.io/blog/img/clipboard-1607525217544-1607609884850.png" alt="img"></p><h1 id="Sentinel的安装"><a href="#Sentinel的安装" class="headerlink" title="Sentinel的安装"></a>Sentinel的安装</h1><p>文件下载路径：[<a href="http://github.com/alibaba/Sentinel/releases]">http://github.com/alibaba/Sentinel/releases]</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/clipboard-1607525280457-1607609890089.png" alt="img"></p><p>Sentinel本身是一个java项目，所以要求安装Java环境，使用命令启动即可。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar sentinel-dashboard-1.8.0.jar  &gt; log.file  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>注意：Sentinel的默认端口号是：8080，所以需要开放端口访问限制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//开放指定端口 </span><br><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent </span><br><span class="line">//重新加载防火墙 </span><br><span class="line">firewall-cmd --reload </span><br></pre></td></tr></table></figure><p>成功的话，访问：<a href="http://ip:8080/">http://IP:8080</a> 即可显示以下页面</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/clipboard-1607609875746.png" alt="img"></p><h1 id="Sentinel的流量控制"><a href="#Sentinel的流量控制" class="headerlink" title="Sentinel的流量控制"></a>Sentinel的流量控制</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>流量控制</strong>（flow control），其原理是监控应用流量的 QPS 或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。</p><p>​        一条限流规则主要由下面几个因素组成，我们可以组合这些元素来实现不同的限流效果：</p><p>a、resource：资源名，即限流规则的作用对象；</p><p>b、count: 限流阈值；</p><p>c、grade: 限流阈值类型（QPS 或并发线程数）；</p><p>​        QPS：每秒请求数，当前调用该api的QPS到达阈值的时候进行限流；</p><p>​        线程数：当调用该api的线程数到达阈值的时候，进行限流；</p><p>d、limitApp: 流控针对的调用来源，若为 default 则不区分调用来源；</p><p>e、strategy: 调用关系限流策略；</p><p>​        直接：当api大达到限流条件时，直接限流；</p><p>​        关联：当关联的资源到达阈值，就限流自己；</p><p>​        链路：只记录指定路上的流量，指定资源从入口资源进来的流量，如果达到阈值，就进行限流，api级别的限流；</p><p>f、controlBehavior: 流量控制效果（直接拒绝、Warm Up、匀速排队）；</p><p>​        直接拒绝：超过设置的阈值，将直接返回默认错误；</p><p>​        Warm Up：预热模式，当流量突然增大时（例如双十一等大型活动），我们希望系统从空闲状态慢慢切换到繁忙状态，经过预定的时间后，到达处理这个请求数的最大值；</p><p>​        匀速排队：严格控制请求通过的间隔时间，使请求匀速通过，这种方式主要用于处理间隔性突发的流量（如：消息队列），在某一秒会出现大量请求，而在接下来一段时间会出现空闲，所以我们可以在接下来的时间处理这些请求，而不是直接拒绝多余的请求。</p><p><font color='red'> 注意事项：</font></p><p>​        <font color='red'>a、使用匀速排队时限流阈值类型必须选择QPS；</font></p><p>​        <font color='red'>b、使用匀速排队时不支持 QPS &gt; 1000 的场景。</font></p><h2 id="流量控制体验"><a href="#流量控制体验" class="headerlink" title="流量控制体验"></a>流量控制体验</h2><h3 id="编写测试工程"><a href="#编写测试工程" class="headerlink" title="编写测试工程"></a>编写测试工程</h3><h4 id="pom文件"><a href="#pom文件" class="headerlink" title="pom文件"></a>pom文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud20200704<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cheng.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloudalibaba-sentinel-test9003<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--监控--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--热部署--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="yml文件"><a href="#yml文件" class="headerlink" title="yml文件"></a>yml文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 9003</span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: cloudalibaba-sentinel-service</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 192.168.197.132:80,192.168.197.132:81</span><br><span class="line">    sentinel:</span><br><span class="line">      transport:</span><br><span class="line">        dashboard: 192.168.197.132:8080</span><br><span class="line">#    port: 8719 #默认8719，假如被占用了会自动从8719开始依次+1扫描。直至找到未被占用的端口</span><br><span class="line"></span><br><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &#x27;*&#x27;</span><br></pre></td></tr></table></figure><h4 id="启动类文件"><a href="#启动类文件" class="headerlink" title="启动类文件"></a>启动类文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package com.cheng.cloud.alibaba;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class SentinelApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(SentinelApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务类文件"><a href="#业务类文件" class="headerlink" title="业务类文件"></a>业务类文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package com.cheng.cloud.alibaba.rest;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class FlowLimitController &#123;</span><br><span class="line">    @GetMapping(&quot;/testA&quot;)</span><br><span class="line">    public String testA() &#123;</span><br><span class="line">        return &quot;------testA&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/testB&quot;)</span><br><span class="line">    public String testB() &#123;</span><br><span class="line">        return &quot;------testB&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写完成后，启动项目</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607529807085-1607609863773.png" alt="1607529807085"></p><p>​        但是，我们发现，无论如何刷新，Sentinel的页面并没有显示我们的项目</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607529867022-1607609859326.png" alt="1607529867022"></p><p>​        这是因为Sentinel采用了懒加载，所以需要我们进行激活，激活的方式是调用任意接口一次即可。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607530275224-1607609856121.png" alt="1607530275224"></p><h3 id="流控模式——QPS直接快速失败"><a href="#流控模式——QPS直接快速失败" class="headerlink" title="流控模式——QPS直接快速失败"></a>流控模式——QPS直接快速失败</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607609798330.png" alt="1607609798330"></p><p>新增成功后的展示内容如下：</p><p>​        当前的规则是每秒只允许 /testA 接口被调用一次。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607609964963.png" alt="1607609964963"></p><p>测试：</p><p>​        每秒仅调用一次 /testA 接口就正常，当频繁快速点击调用 /testA 接口则失败</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607610198022.png" alt="1607610198022"></p><h3 id="流控模式——线程直接快速失败"><a href="#流控模式——线程直接快速失败" class="headerlink" title="流控模式——线程直接快速失败"></a>流控模式——线程直接快速失败</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607610945394.png" alt="1607610945394"></p><p>新增成功后的展示内容如下：</p><p>​        当前的规则是只允许 /testB 接口被最多一个线程调用。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607610979813.png" alt="1607610979813"></p><p>​        线程数的限制：比如a请求过来,处理很慢,在一直处理,此时b请求又过来了，此时因为a占用一个线程,此时要处理b请求就只有额外开启一个线程，那么就会报错。</p><p>测试：</p><p>​        我们修改一下 /testB 接口 ，模拟接口调用很慢的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testB&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;------testB&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​        接下来，我们同时打开两个窗口，注意需要两个浏览器，同一个浏览器有时候会没有效果，调用接口，先调用的接口会响应结果，后面的直接报错。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607612220131.png" alt="1607612220131"></p><h3 id="流控模式——QPS关联快速失败"><a href="#流控模式——QPS关联快速失败" class="headerlink" title="流控模式——QPS关联快速失败"></a>流控模式——QPS关联快速失败</h3><p>​        关联：当关联的资源到达阈值，就限流自己；例如：当与A关联的B达到阈值之后，就限流A自己</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607613235033-1607756847329.png" alt="1607613235033"></p><p>​        当前的规则是当 /testA 接口的请求qps大于1时，就让 /testB 之后的请求直接失败。</p><p>测试：</p><p>​        我们使用postman或JMenter模拟频繁调用 /testA 接口的情况导致 /testA 接口的qps达到阈值，此时，我们调用 /testB 接口，此时，/testB 接口访问失败。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607757756939.png" alt="1607757756939"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607757797854.png" alt="1607757797854"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607757824972.png" alt="1607757824972"></p><h3 id="流控模式——QPS链路快速失败"><a href="#流控模式——QPS链路快速失败" class="headerlink" title="流控模式——QPS链路快速失败"></a>流控模式——QPS链路快速失败</h3><p>​    链路流控模式指的是，当从某个接口过来的资源达到限流条件时，开启限流；它的功能有点类似于针对来源配置项，区别在于：针对来源是针对上级微服务，而链路流控是针对上级接口，也就是说它的粒度更细；</p><h4 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h4><h5 id="新增Service接口及其实现"><a href="#新增Service接口及其实现" class="headerlink" title="新增Service接口及其实现"></a>新增Service接口及其实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">getOrder</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.annotation.SentinelResource;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.alibaba.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@SentinelResource(value = &quot;getOrder&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(<span class="keyword">new</span> Random().nextInt());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="controller新增一个接口，调用上面service的方法"><a href="#controller新增一个接口，调用上面service的方法" class="headerlink" title="controller新增一个接口，调用上面service的方法"></a>controller新增一个接口，调用上面service的方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/test1&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(id == <span class="number">1</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> orderService.getOrder();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;---/test1  id != 1&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607764678542.png" alt="1607764678542"></p><p>​        当前的规则是当 service中的getOrder 接口的请求qps大于1时，就让 /test1 之后的请求直接失败。</p><p>测试：</p><p>​        我们使用postman或JMenter模拟频繁调用 /test1 接口的情况导致 /test1 接口的qps达到阈值，此时，我们调用 /test1 接口，此时，/test1 接口访问失败。</p><p>​        but，测试时我们发现并没有效果   o(╥﹏╥)o</p><p>​        这是因为在在spring-cloud-alibaba v2.1.1.RELEASE及前，Sentinel1.7.0及后，关闭了URL PATH聚合，所以需要我们开启才能生效。【当前使用的是spring-cloud-alibaba v2.1.1.RELEASE和Sentinel1.8.0】</p><h4 id="开启方式："><a href="#开启方式：" class="headerlink" title="开启方式："></a>开启方式：</h4><h5 id="配置文件中关闭sentinel的CommonFilter实例化【默认是true，修改为false】"><a href="#配置文件中关闭sentinel的CommonFilter实例化【默认是true，修改为false】" class="headerlink" title="配置文件中关闭sentinel的CommonFilter实例化【默认是true，修改为false】"></a>配置文件中关闭sentinel的CommonFilter实例化【默认是true，修改为false】</h5><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.cloud.sentinel.filter.enabled</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><h5 id="添加一个配置类，自己构建CommonFilter实例"><a href="#添加一个配置类，自己构建CommonFilter实例" class="headerlink" title="添加一个配置类，自己构建CommonFilter实例"></a>添加一个配置类，自己构建CommonFilter实例</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.adapter.servlet.CommonFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SentinelContextConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@NOTE</span> 在spring-cloud-alibaba v2.1.1.RELEASE及前，sentinel1.7.0及后，关闭URL PATH聚合需要通过该方式，spring-cloud-alibaba v2.1.1.RELEASE后，可以通过配置关闭：spring.cloud.sentinel.web-context-unify=false</span></span><br><span class="line"><span class="comment">     * 手动注入Sentinel的过滤器，关闭Sentinel注入CommonFilter实例，修改配置文件中的 spring.cloud.sentinel.filter.enabled=false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">sentinelFilterRegistration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FilterRegistrationBean registration = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">        registration.setFilter(<span class="keyword">new</span> CommonFilter());</span><br><span class="line">        registration.addUrlPatterns(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">        <span class="comment">// 入口资源关闭聚合</span></span><br><span class="line">        registration.addInitParameter(CommonFilter.WEB_CONTEXT_UNIFY, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">        registration.setName(<span class="string">&quot;sentinelFilter&quot;</span>);</span><br><span class="line">        registration.setOrder(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> registration;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color='red'>        注意：这里spring-cloud-alibaba v2.1.0.RELEASE并没有CommonFilter.WEB_CONTEXT_UNIFY这个选项，所以请修改为2.1.1版本，如果你使用更新的spring-cloud-alibaba版本，在配置文件下就可以直接进行配置spring.cloud.sentinel.web-context-unify的属性为false，并引入sentinel-web-servlet的包【1.7.0版本】即可。</font></p><p>重新测试</p><p>​        当我们频繁调用/test1?id=1时，达到阈值后会产生异常</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607766159350.png" alt="1607766159350"></p><p>​        而当我们使用其他id时，由于不走getOrder的方法，所以不会产生限流的效果</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607766252450.png" alt="1607766252450"></p><h3 id="流控模式——QPS直接Warm-up"><a href="#流控模式——QPS直接Warm-up" class="headerlink" title="流控模式——QPS直接Warm up"></a>流控模式——QPS直接Warm up</h3><p>​        Warm up：预热、冷加载，经过预热时长后才会达到阈值，当系统长时间处于低请求的情况下，当流量突然瞬间增加时，直接把系统拉升到高水位可能使系统直接崩溃，通过冷加载的方式启动，使流量慢慢增加，到达一定时间后达到阈值，对系统比较友好。起始阈值计算公式：阈值/冷加载因子coldFactor(默认值为3)。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607767547432.png" alt="1607767547432"></p><p>​        当前的规则是当 /testA 接口刚开始的请求qps大于2时，就让 /test1 之后的请求直接失败，经过5秒后，最大qps请求数为6。</p><p>测试：</p><p>​        我们该开始快速请求  /testA 接口时，由于冷加载的原因，最大的阈值是2，所以请求偶尔会出现失败的情况，当随着请求时间的增加，慢慢的请求失败次数降低，到了5s的时候，由于阈值达到了最大值6，所以几乎不会出现失败的情况</p><h3 id="流控模式——QPS直接排队等待"><a href="#流控模式——QPS直接排队等待" class="headerlink" title="流控模式——QPS直接排队等待"></a>流控模式——QPS直接排队等待</h3><p>​        排队等待：让请求以均匀的速度通过，每秒最多请求阈值数量的请求，其他请求进入等待状态，超过最大等待时间之后则返回失败（底层使用漏桶算法）。这种方式主要应用于处理间隔性突发的流量，例如消息队列，假设在某一秒有大量的请求进来，而接下来会有一段时间处于空闲期，我们希望系统能够在接下来的时间逐渐处理这些请求而不是在第一秒就直接拒绝这些请求。</p><p><font color='red'>注意：排队等待仅支持QPS，并不支持线程数。</font></p><p>​        新增测试方法 /test2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/test2&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       logger.info(Thread.currentThread().getName()+<span class="string">&quot;  ...test2!&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;---/test2&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607847380859.png" alt="1607847380859"></p><p>​        当前的规则是当 /test2 接口有大量请求进来时，我们每秒仅处理一个请求，其它请求进入等待中，当等待时间超过20s之后，返回失败。</p><p>测试：</p><p>​        快速请求 /test2 接口，查看控制台，我们发现，每秒仅处理一个请求</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607847610188.png" alt="1607847610188"></p><h1 id="Sentinel的熔断降级"><a href="#Sentinel的熔断降级" class="headerlink" title="Sentinel的熔断降级"></a>Sentinel的熔断降级</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>​        除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。一个服务常常会调用别的模块，可能是另外的一个远程服务、数据库，或者第三方 API 等。例如，支付的时候，可能需要远程调用银联提供的 API；查询某个商品的价格，可能需要进行数据库查询。然而，这个被依赖服务的稳定性是不能保证的。如果依赖的服务出现了不稳定的情况，请求的响应时间变长，那么调用服务的方法的响应时间也会变长，线程会产生堆积，最终可能耗尽业务自身的线程池，服务本身也变得不可用。</p><p>​        现代微服务架构都是分布式的，由非常多的服务组成。不同服务之间相互调用，组成复杂的调用链路。以上的问题在链路调用中会产生放大的效果。复杂链路上的某一环不稳定，就可能会层层级联，最终导致整个链路都不可用。因此我们需要对不稳定的<strong>弱依赖服务调用</strong>进行熔断降级，暂时切断不稳定调用，避免局部不稳定因素导致整体的雪崩。熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置。</p><p>​        <font color='red'><strong>注意</strong>：本文档针对 Sentinel 1.8.0 及以上版本。1.8.0 版本对熔断降级特性进行了全新的改进升级，请使用最新版本以更好地利用熔断降级的能力。</font></p><h2 id="Sentinel的熔断策略"><a href="#Sentinel的熔断策略" class="headerlink" title="Sentinel的熔断策略"></a>Sentinel的熔断策略</h2><h3 id="慢调用比例-SLOW-REQUEST-RATIO"><a href="#慢调用比例-SLOW-REQUEST-RATIO" class="headerlink" title="慢调用比例 (SLOW_REQUEST_RATIO)"></a><strong>慢调用比例 (SLOW_REQUEST_RATIO)</strong></h3><p>​        选择以慢调用比例作为阈值，需要设置允许的慢调用 RT（即最大的响应时间），请求的响应时间大于该值则统计为慢调用。当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且慢调用的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求响应时间小于设置的慢调用 RT 则结束熔断，若大于设置的慢调用 RT 则会再次被熔断。</p><h4 id="熔断条件"><a href="#熔断条件" class="headerlink" title="熔断条件"></a>熔断条件</h4><p>​        a、请求数目大于设置的最小请求数目；</p><p>​        b、慢调用的比例大于阈值。</p><h4 id="1-8-升级内容"><a href="#1-8-升级内容" class="headerlink" title="1.8 升级内容"></a>1.8 升级内容</h4><p>​            Sentinel在1.8.0版本对熔断降级做了大的调整，可以定义任意时长的熔断时间，引入了半开启恢复支持。熔断状态由原来只有OPEN、CLOSED两种状态修改为OPEN、HALF_OPEN、CLOSED三种状态</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607957908820.png" alt="1607957908820"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607957790395.png" alt="1607957790395"></p><p>​        1.7.0版本中的RT对应1.8.0版本中的最大RT，1.7.0版本中的时间窗口对应1.8.0版本中的熔断时长，1.7.0版本中的最小请求数固定是5，而对应1.8.0版本中的最小请求数可以进行自定义，1.8.0版本中新增比例阈值，具体属性定义在下表：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607957994736.png" alt="1607957994736"></p><h4 id="执行逻辑"><a href="#执行逻辑" class="headerlink" title="执行逻辑"></a>执行逻辑</h4><p>​        <strong>a、熔断（OPEN）：请求数大于最小请求数并且慢调用的比率大于比例阈值则发生熔断</strong>，熔断时长为用户自定义设置；</p><p>​        <strong>b、探测（HALFOPEN）</strong>：当熔断过了定义的熔断时长，状态由熔断（OPEN）变为探测（HALFOPEN）；</p><p>​        c、如果接下来的一个请求小于最大RT，说明慢调用已经恢复，结束熔断，状态由探测（HALF_OPEN）变更为关闭（CLOSED）；</p><p>​        d、如果接下来的一个请求大于最大RT，说明慢调用未恢复，继续熔断，熔断时长保持一致。</p><p>​        注意：Sentinel默认统计的RT上限是4900ms，超出此阈值的都会算作4900ms，若需要变更此上限可以通过启动配置项-Dcsp.sentinel.statistic.max.rt=xxx来配置。</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>​        a、添加测试代码   /testC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testC&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testC</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">&quot;...testC!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;---/testC&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​        b、添加降级配置</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607960194780.png" alt="1607960194780"></p><p>​        当前配置的规则是：允许每个请求消耗的最长时间为200毫秒，当超过时认定为慢调用，当每秒最小请求数大于5，且慢调用比例大于80%时，接下来1秒钟熔断，由于我们在测试方法中设置了等待1秒钟，所以所有请求都是慢调用，所以我们再进行请求时会触发熔断。</p><p>​        我们使用Jmeter来模拟调用【每秒请求10次】</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607960486159.png" alt="1607960486159"></p><p>​        我们可以看到当Jmeter开始启动时，由于每次请求都是超时（超过80%）且每秒请求数为10，符合慢调用熔断的规则，所以我们的接口就被熔断了，当关闭Jmeter测试后，我们再访问接口，请求成功。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607960562938.png" alt="1607960562938"></p><h3 id="异常比例-ERROR-RATIO"><a href="#异常比例-ERROR-RATIO" class="headerlink" title="异常比例 (ERROR_RATIO)"></a><strong>异常比例 (ERROR_RATIO)</strong></h3><p>​        当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且异常的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。异常比率的阈值范围是 [0.0, 1.0]，代表 0% - 100%。</p><h4 id="熔断条件-1"><a href="#熔断条件-1" class="headerlink" title="熔断条件"></a>熔断条件</h4><p>​        a、请求数目大于设置的最小请求数目；</p><p>​        b、异常调用的比例大于阈值。</p><h4 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h4><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607961669359.png" alt="1607961669359"></p><h4 id="执行逻辑-1"><a href="#执行逻辑-1" class="headerlink" title="执行逻辑"></a>执行逻辑</h4><p>​        <strong>a、熔断（OPEN）：当请求数大于最小请求并且异常比例大于设置的阈值时触发熔断</strong>，熔断时长由用户设置；</p><p>​        <strong>b、探测（HALFOPEN）</strong>：当超过熔断时长时，由熔断（OPEN）转为探测（HALFOPEN）；</p><p>​        c、如果接下来的一个请求未发生错误，说明应用恢复，结束熔断，状态由探测（HALF_OPEN）变更为关闭（CLOSED）；</p><p>​        d、如果接下来的一个请求继续发生错误，说明应用未恢复，继续熔断，熔断时长保持一致。</p><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p>​        a、添加测试代码   /testD</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testD&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> age = <span class="number">10</span>/<span class="number">0</span>; </span><br><span class="line">        logger.info(<span class="string">&quot;  ...testD!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;---/testD&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​        b、添加降级配置</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607962634855.png" alt="1607962634855"></p><p>​        当前的规则是：允许所有请求的异常比例为30%，当超过时认定为异常接口，当每秒最小请求数大于5，且异常比例大于30%时，接下来5秒钟熔断，由于我们在测试方法中设置了by zero的异常，所以所有请求都是异常请求，所以我们再进行请求时会触发熔断。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607963035797.png" alt="1607963035797"></p><p>​        我们依然使用Jmeter进行测试，测试方法同上。</p><p>​        我们可以看到当Jmeter开始启动时，由于每次请求都是异常（超过30%）且每秒请求数为10，符合异常比例熔断的规则，所以我们的接口就被熔断了，当关闭Jmeter测试后，我们再访问接口，请求成功。且这里测试过，我们的熔断时间为5s，当我们停止Jmeter之后立刻测试接口，接口会返回by zero的异常，这是因为两个条件之中的每秒最小请求数大于5的条件失效了，所以熔断效果不起作用了。</p><h3 id="异常数-ERROR-COUNT"><a href="#异常数-ERROR-COUNT" class="headerlink" title="异常数 (ERROR_COUNT)"></a><strong>异常数 (ERROR_COUNT)</strong></h3><p>​        当单位统计时长内的异常数目超过阈值之后会自动进行熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。</p><h4 id="熔断条件-2"><a href="#熔断条件-2" class="headerlink" title="熔断条件"></a>熔断条件</h4><p>​        a、请求数目大于设置的最小请求数目；</p><p>​        b、异常调用的数目大于阈值。</p><h4 id="配置参数-1"><a href="#配置参数-1" class="headerlink" title="配置参数"></a>配置参数</h4><p><img src="http://cheng_qiwei.gitee.io/blog/img/1608047548622.png" alt="1608047548622"></p><h4 id="执行逻辑-2"><a href="#执行逻辑-2" class="headerlink" title="执行逻辑"></a>执行逻辑</h4><p>​        <strong>a、熔断（OPEN）：当请求数大于最小请求并且异常数量大于设置的阈值时触发熔断</strong>，熔断时长由用户设置；</p><p>​        <strong>b、探测（HALFOPEN）</strong>：当超过熔断时长时，由熔断（OPEN）转为探测（HALFOPEN）；</p><p>​        c、如果接下来的一个请求未发生错误，说明应用恢复，结束熔断，状态由探测（HALF_OPEN）变更为关闭（CLOSED）；</p><p>​        d、如果接下来的一个请求继续发生错误，说明应用未恢复，继续熔断，熔断时长保持一致。</p><h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4><p>​        a、测试代码依然使用  /testD</p><p>​        b、添加降级配置</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1608047915674.png" alt="1608047915674"></p><p>​        当前的规则是：在60s内，当达到最小请求数5，且发生异常的请求数大于6个时，发生熔断，由于我们在测试方法中设置了by zero的异常，所以所有请求都是异常请求，所以当我们请求6次后，会触发熔断。</p><p>1-6次返回</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1608048137053.png" alt="1608048137053"></p><p>第7次及之后一分钟内的请求</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1608048142861.png" alt="1608048142861"></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloudAlibaba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sentinel </tag>
            
            <tag> SpringCloudAlibaba </tag>
            
            <tag> 熔断降级 </tag>
            
            <tag> 流量控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache JMeter的介绍和使用</title>
      <link href="/blog/2020/12/13/Apache%20JMeter%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/blog/2020/12/13/Apache%20JMeter%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'><strong>Apache JMeter的介绍和使用</strong></font></p><p>​        Apache JMeter是一款纯java编写负载功能测试和性能测试开源工具软件。相比Loadrunner而言，JMeter小巧轻便且免费，逐渐成为了主流的性能测试工具，是每个测试人员都必须要掌握的工具之一。</p><h1 id="JMeter的安装"><a href="#JMeter的安装" class="headerlink" title="JMeter的安装"></a>JMeter的安装</h1><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><p>由于JMeter是基于java进行开发，所以需要安装JDK，安装JDK8或以上。</p><h2 id="安装Jmeter"><a href="#安装Jmeter" class="headerlink" title="安装Jmeter"></a>安装Jmeter</h2><h3 id="Jmeter的下载"><a href="#Jmeter的下载" class="headerlink" title="Jmeter的下载"></a>Jmeter的下载</h3><p>下载地址：<a href="http://jmeter.apache.org/download_jmeter.cgi">http://jmeter.apache.org/download_jmeter.cgi</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607852531286.png" alt="1607852531286"></p><h3 id="解压安装包，打开安装包bin目录，双击jmeter-bat启动"><a href="#解压安装包，打开安装包bin目录，双击jmeter-bat启动" class="headerlink" title="解压安装包，打开安装包bin目录，双击jmeter.bat启动"></a>解压安装包，打开安装包bin目录，双击jmeter.bat启动</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607853875816.png" alt="1607853875816"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607853902084.png" alt="1607853902084"></p><p>3、设置语言为中文</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607854203203.png" alt="1607854203203"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607854246428.png" alt="1607854246428"></p><h1 id="Jmeter的使用"><a href="#Jmeter的使用" class="headerlink" title="Jmeter的使用"></a>Jmeter的使用</h1><h2 id="创建线程组"><a href="#创建线程组" class="headerlink" title="创建线程组"></a>创建线程组</h2><p>​        右键点击“测试计划” -&gt; “添加” -&gt; “线程（用户）” -&gt; “线程组”</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607854808012.png" alt="1607854808012"></p><p>线程组参数详解： </p><p><strong>线程数</strong>：虚拟用户数。一个虚拟用户占用一个进程或线程。设置多少虚拟用户数在这里也就是设置多少个线程数。 </p><p><strong>Ramp-Up Period(in seconds)准备时长</strong>：设置的虚拟用户数需要多长时间全部启动。如果线程数为10，准备时长为2，那么需要2秒钟启动10个线程，也就是每秒钟启动5个线程。 </p><p><strong>循环次数</strong>：每个线程发送请求的次数。如果线程数为10，循环次数为100，那么每个线程发送100次请求。总请求数为10*100=1000 。如果勾选了“永远”，那么所有线程会一直发送请求，一到选择停止运行脚本。  </p><p><strong>调度器</strong>：设置线程组启动的开始时间和结束时间(配置调度器时，需要勾选循环次数为永远) 。</p><p><strong>持续时间（秒）</strong>：测试持续时间，会覆盖结束时间 。</p><p><strong>启动延迟（秒）</strong>：测试延迟启动时间，会覆盖启动时间 。</p><p><strong>启动时间</strong>：测试启动时间，启动延迟会覆盖它。当启动时间已过，手动只需测试时当前时间也会覆盖它。 </p><p><strong>结束时间</strong>：测试结束时间，持续时间会覆盖它。</p><h2 id="添加请求"><a href="#添加请求" class="headerlink" title="添加请求"></a>添加请求</h2><p>​        右键点击“线程组” -&gt; “添加” -&gt; “Sampler” -&gt; “HTTP请求” </p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607855692886.png" alt="1607855692886"></p><p>​        假设我们的测试接口是：<a href="http://www.baidu.com/s?ie=utf-8&amp;wd=jmeter%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E4%B8%8B%E5%9B%BE%E5%A1%AB%E5%86%99%EF%BC%9A">http://www.baidu.com/s?ie=utf-8&amp;wd=jmeter性能测试，可以参考下图填写：</a></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607855972981.png" alt="1607855972981"></p><p>Http请求主要参数详解：</p><p><strong>协议</strong>：向目标服务器发送HTTP请求协议，可以是HTTP或HTTPS，默认为HTTP。 </p><p><strong>服务器名称或IP</strong>：HTTP请求发送的目标服务器名称或IP 。</p><p><strong>端口号</strong>：目标服务器的端口号，默认值为80 。</p><p><strong>方法</strong>：发送HTTP请求的方法，可用方法包括GET、POST、HEAD、PUT、OPTIONS、TRACE、DELETE等。 </p><p><strong>路径</strong>：目标URL路径（URL中去掉服务器地址、端口及参数后剩余部分） 。</p><p><strong>Content encoding内容编码</strong> ：编码方式，默认为ISO-8859-1编码，这里配置为utf-8。</p><p><strong>同请求一起发送参数</strong>：在请求中发送的URL参数，用户可以将URL中所有参数设置在本表中，表中每行为一个参数（对应URL中的 name=value），注意参数传入中文时需要勾选“编码”。</p><h2 id="添加察看结果树"><a href="#添加察看结果树" class="headerlink" title="添加察看结果树"></a>添加察看结果树</h2><p>​        右键点击“线程组” -&gt; “添加” -&gt; “监听器” -&gt; “察看结果树” </p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607856632948.png" alt="1607856632948"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607856844503.png" alt="1607856844503"></p><p>​        由于这个页面是一个html页面，所以我们要配置响应数据格式为“HTML Source Formatted”</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607873443952.png" alt="1607873443952"></p><p>​        点击测试开始的按钮，我们可以看到测试了10个数据，返回status都是ok</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607857241735.png" alt="1607857241735"></p><p>​        这样一个jmeter的测试就结束了</p><h2 id="添加自定义变量"><a href="#添加自定义变量" class="headerlink" title="添加自定义变量"></a>添加自定义变量</h2><p>​        我们可以添加用户自定义变量用以Http请求参数化，右键点击“线程组” -&gt; “添加” -&gt; “配置元件” -&gt; “用户定义的变量”：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607857512292.png" alt="1607857512292"></p><h3 id="设置名称为wd，值为Jmeter测试动态变量"><a href="#设置名称为wd，值为Jmeter测试动态变量" class="headerlink" title="设置名称为wd，值为Jmeter测试动态变量"></a>设置名称为wd，值为Jmeter测试动态变量</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871038056.png" alt="1607871038056"></p><h3 id="http请求的值，使用-wd-来动态获取该变量的值"><a href="#http请求的值，使用-wd-来动态获取该变量的值" class="headerlink" title="http请求的值，使用${wd}来动态获取该变量的值"></a>http请求的值，使用${wd}来动态获取该变量的值</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871132432.png" alt="1607871132432"></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871275266.png" alt="1607871275266"></p><p>​        点击测试，观察结果，返回了我们自定义的搜索词Jmeter测试动态变量，修改成功！</p><h2 id="添加断言结果"><a href="#添加断言结果" class="headerlink" title="添加断言结果"></a>添加断言结果</h2><p>​        上一步测试中如果返回的内容复杂且多，那我们可能要找到的难度就会提高，此时我们可以使用断言结果来进行处理。</p><p>​        右键点击“线程组” -&gt; “添加”-&gt; “断言” -&gt; “响应断言” </p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871694041.png" alt="1607871694041"></p><h3 id="添加匹配规则为包括，测试模式为我们添加的参数，用-wd-代替，点击保存"><a href="#添加匹配规则为包括，测试模式为我们添加的参数，用-wd-代替，点击保存" class="headerlink" title="添加匹配规则为包括，测试模式为我们添加的参数，用${wd}代替，点击保存"></a>添加匹配规则为包括，测试模式为我们添加的参数，用${wd}代替，点击保存</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871803267.png" alt="1607871803267"></p><h3 id="添加断言结果-1"><a href="#添加断言结果-1" class="headerlink" title="添加断言结果"></a>添加断言结果</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607871993115.png" alt="1607871993115"></p><p>​        当前的测试规则是，结果包含参数数据则为true</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607873562323.png" alt="1607873562323"></p><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607873130707.png" alt="1607873130707"></p><p>​        点击测试，如果断言结果为true，则不会返回什么内容，如图为成功，如果失败，则会返回如下图展示的内容</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607873228037.png" alt="1607873228037"></p><h2 id="设置动态参数"><a href="#设置动态参数" class="headerlink" title="设置动态参数"></a>设置动态参数</h2><p>​        有时候我们的测试参数不是一成不变的，如果我们需要在测试的时候动态修改参数，则可以进行以下配置。</p><p>​        右键点击“http请求” -&gt; “添加”-&gt; “配置元件” -&gt; “CSV Data Set Config” </p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607873807373.png" alt="1607873807373"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607874202732.png" alt="1607874202732"></p><p>​        这里要注意文本保存的编码方式要和设置的文件编码方式一致，否则会出现中文乱码的情况。</p><p>测试：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607874474506.png" alt="1607874474506"></p><h2 id="添加聚合报告"><a href="#添加聚合报告" class="headerlink" title="添加聚合报告"></a>添加聚合报告</h2><p>​        右键点击“线程组” -&gt; “添加” -&gt; “监听器” -&gt; “聚合报告”，用以存放性能测试报告 </p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607875044907.png" alt="1607875044907"></p><p>测试：</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1607875196722.png" alt="1607875196722"></p><p>聚合报告参数详解： </p><p><strong>Label</strong>：每个 JMeter 的 element（例如 HTTP Request）都有一个 Name 属性，这里显示的就是 Name 属性的值 ；</p><p><strong>#Samples（样本）</strong>：请求数——表示这次测试中一共发出了多少个请求，如果模拟10个用户，每个用户迭代10次，那么这里显示100 ；</p><p> <strong>Average</strong>：平均响应时间——默认情况下是单个 Request 的平均响应时间，当使用了 Transaction Controller 时，以Transaction 为单位显示平均响应时间 ；</p><p><strong>Median</strong>：中位数，也就是 50％ 用户的响应时间；</p><p><strong>90% Line</strong>：90％ 用户的响应时间 ；</p><p><strong>Min</strong>：最小响应时间 ；</p><p><strong>Max</strong>：最大响应时间 ；</p><p>**Error%**：错误率——错误请求数/请求总数 ；</p><p><strong>Throughput</strong>：吞吐量——默认情况下表示每秒完成的请求数（Request per Second），当使用了 Transaction Controller 时，也可以表示类似 LoadRunner 的 Transaction per Second 数 ；</p><p> <strong>KB/Sec</strong>：每秒从服务器端接收到的数据量，相当于LoadRunner中的Throughput/Sec；</p><p>​        一般而言，性能测试中我们需要重点关注的数据有： #Samples 请求数，Average 平均响应时间，Min 最小响应时间，Max 最大响应时间，Error% 错误率及Throughput 吞吐量。</p>]]></content>
      
      
      <categories>
          
          <category> 辅助工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JMeter </tag>
            
            <tag> 性能测试 </tag>
            
            <tag> 压力测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel的介绍与使用（二）</title>
      <link href="/blog/2020/12/09/Sentinel%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/blog/2020/12/09/Sentinel%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><font size='6.5px'>Sentinel的介绍与使用（二）</font></p><h1 id="热点参数限流"><a href="#热点参数限流" class="headerlink" title="热点参数限流"></a>热点参数限流</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是<font color="red">一种特殊的流量控制</font>，仅对包含热点参数的资源调用生效。</p><h2 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testHotKey&quot;)</span></span><br><span class="line"><span class="meta">@SentinelResource(value = &quot;testHotKey&quot;,blockHandler = &quot;del_testHotKey&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testHotKey</span><span class="params">(<span class="meta">@RequestParam(value = &quot;p1&quot;,required = false)</span>String p1,</span></span></span><br><span class="line"><span class="function"><span class="params">                         <span class="meta">@RequestParam(value = &quot;p2&quot;,required = false)</span>String p2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;---/testHotKey&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">del_testHotKey</span><span class="params">(String p1,String p2, BlockException blockException)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;---/del_testHotKey,o(╥﹏╥)o&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们写了一个兜底的方法 del_testHotKey ，如果进入限流，我们将会走兜底的方法，如果没有配置兜底的方法，则会报BlockException的错误，对用户不友好，所以我们一般情况下使用热点参数限流的时候都会配置一个兜底的方法，兜底的方法比限流的方法多了BlockException这个参数，注意不要遗忘，且存在另一个异常，叫BlockedException，需要留意。</p><p>在配置@SentinelResource的时候，要注意value的配置，就是下面配置页的资源名，不要多一”/“，如果没有配value这一项，Sentinel才会默认去找路径名称</p><h2 id="热点配置（定义热点规则）"><a href="#热点配置（定义热点规则）" class="headerlink" title="热点配置（定义热点规则）"></a>热点配置（定义热点规则）</h2><p><img src="D:\hexo\source\img\1609053117528-1612065261160.png" alt="1609053117528"></p><p>参数索引：指的是方法上的参数的顺序，从第一个参数开始为0，第二个为1……</p><p>单机阈值：最大请求数是多少</p><p>统计窗口时长：这段时间发生熔断，阻止请求进来</p><p>当前的规则是：当请求 /testHotKey 时，如果添加了请求参数p1，则2s内的最大请求数为1，超过时，则限制这些请求，如果未添加请求参数p1，则不进行限制。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>a、首先测试只有p1参数，测试结果：</p><p>当快速点击时，发现被热点限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609053693855.png" alt="1609053693855"></p><p>b、测试只有p2参数，测试结果：</p><p>当快速点击时，还是可以正常访问</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609053756408.png" alt="1609053756408"></p><p>c、测试同时有p1和p2参数，测试结果：</p><p>当快速点击时，发现被热点限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609053797962.png" alt="1609053797962"></p><p>结论：当参数中包含限流参数时，当请求超过阈值时，就会被限流。</p><h2 id="热点参数限流例外项"><a href="#热点参数限流例外项" class="headerlink" title="热点参数限流例外项"></a>热点参数限流例外项</h2><p>当我们在限制热点参数时，如果我们对该参数如果是某些值时不想对其做限制时，我们可以配置热点参数限流例外项。</p><p>点击  编辑  ——&gt;  高级选项</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054319610.png" alt="1609054319610"></p><p>当前规则是：当请求 /testHotKey 时，如果添加了请求参数p1，则2s内的最大请求数为1，超过时，则限制这些请求，如果未添加请求参数p1，则不进行限制。但如果p1的值为2，则限流的阈值变为100。</p><h2 id="参数限流例外项测试"><a href="#参数限流例外项测试" class="headerlink" title="参数限流例外项测试"></a>参数限流例外项测试</h2><p>a、首先测试只有p1参数，且p1的值不为2，测试结果：</p><p>当快速点击时，发现被热点限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609053693855.png" alt="1609053693855"></p><p>b、然后测试只有p1参数，且p1的值为2，测试结果：</p><p>当快速点击时，发现没有被热点限流</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054395990.png" alt="1609054395990"></p><h1 id="系统自适应限流"><a href="#系统自适应限流" class="headerlink" title="系统自适应限流"></a>系统自适应限流</h1><p>Sentinel 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、CPU 使用率、总体平均 RT、入口 QPS 和并发线程数等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。</p><h2 id="系统自适应限流模式"><a href="#系统自适应限流模式" class="headerlink" title="系统自适应限流模式"></a>系统自适应限流模式</h2><p><strong>Load 自适应</strong>（仅对 Linux/Unix-like 机器生效）：系统的 load1 作为启发指标，进行自适应系统保护。当系统 load1 超过设定的启发值，且系统当前的并发线程数超过估算的系统容量时才会触发系统保护（BBR 阶段）。系统容量由系统的 maxQps * minRt估算得出。设定参考值一般是 CPU cores * 2.5。</p><p><strong>CPU usage</strong>（1.5.0+ 版本）：当系统 CPU 使用率超过阈值即触发系统保护（取值范围 0.0-1.0），比较灵敏。</p><p><strong>平均 RT</strong>：当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。</p><p><strong>并发线程数</strong>：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。</p><p><strong>入口 QPS</strong>：当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。</p><p>本次仅测试两个，一个是CPU usage，一个是入口QPS</p><h2 id="系统自适应限流——入口QPS"><a href="#系统自适应限流——入口QPS" class="headerlink" title="系统自适应限流——入口QPS"></a>系统自适应限流——入口QPS</h2><h3 id="测试使用之前的代码-testA-和-testB"><a href="#测试使用之前的代码-testA-和-testB" class="headerlink" title="测试使用之前的代码  /testA  和  /testB"></a>测试使用之前的代码  /testA  和  /testB</h3><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>点击  系统规则 –&gt;  新增系统规则</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054495122.png" alt="1609054495122"></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>/testA  和  /testB 没有配置限流规则</p><p>a、快速点击请求  /testA ,使QPS大于1，测试结果：被限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054891286.png" alt="1609054891286"></p><p>b、快速点击请求  /testHotKey ,使QPS大于1，测试结果：被限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054776749.png" alt="1609054776749"></p><p>c、使用jmeter高并发请求 /testA 接口，然后点击 /testB 接口测试，测试结果：被限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054776749.png" alt="1609054776749"></p><h2 id="系统自适应限流——CPU-usage"><a href="#系统自适应限流——CPU-usage" class="headerlink" title="系统自适应限流——CPU usage"></a>系统自适应限流——CPU usage</h2><h3 id="测试使用之前的代码-testA"><a href="#测试使用之前的代码-testA" class="headerlink" title="测试使用之前的代码  /testA"></a>测试使用之前的代码  /testA</h3><h3 id="添加配置-1"><a href="#添加配置-1" class="headerlink" title="添加配置"></a>添加配置</h3><p>点击  系统规则 –&gt;  新增系统规则</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054967586.png" alt="1609054967586"></p><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>/testA 没有配置限流规则</p><p>当前系统的cpu为85%</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609054979409.png" alt="1609054979409"></p><p>点击请求  /testA ，测试结果：被限流了</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609055022913.png" alt="1609055022913"></p><h1 id="SentinelResource注解"><a href="#SentinelResource注解" class="headerlink" title="@SentinelResource注解"></a>@SentinelResource注解</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>@SentinelResource 用于定义资源，并提供可选的异常处理和 fallback 配置项。 @SentinelResource 注解包含以下属性：</p><p><strong>value</strong>：资源名称，必需项（不能为空）；<br><strong>entryType</strong>：entry 类型，可选项（默认为 EntryType.OUT）；<br><strong>blockHandler / blockHandlerClass</strong>: blockHandler 对应处理 BlockException 的函数名称，可选项。blockHandler 函数访问范围需要是 public，返回类型需要与原方法相匹配，参数类型需要和原方法相匹配并且最后加一个额外的参数，类型为 BlockException。blockHandler 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 blockHandlerClass 为对应的类的 Class 对象，注意对应的函数必需为 static 函数，否则无法解析；<br><strong>fallback / fallbackClass</strong>：fallback 函数名称，可选项，用于在抛出异常的时候提供 fallback 处理逻辑。fallback 函数可以针对所有类型的异常（除了 exceptionsToIgnore 里面排除掉的异常类型）进行处理。fallback 函数签名和位置要求：<br>                返回值类型必须与原函数返回值类型一致；<br>                方法参数列表需要和原函数一致，或者可以额外多一个 Throwable 类型的参数用于接收对应的异常。<br>                fallback 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 fallbackClass 为对应的类的 Class 对象，注意对应的函数必需为 static 函数，否则无法解析。<br><strong>defaultFallback</strong>：默认的 fallback 函数名称，可选项，通常用于通用的 fallback 逻辑（即可以用于很多服务或方法）。默认 fallback 函数可以针对所有类型的异常（除了 exceptionsToIgnore 里面排除掉的异常类型）进行处理。若同时配置了 fallback 和 defaultFallback，则只有 fallback 会生效。defaultFallback 函数签名要求：<br>                返回值类型必须与原函数返回值类型一致；<br>                方法参数列表需要为空，或者可以额外多一个 Throwable 类型的参数用于接收对应的异常。<br>                defaultFallback 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定 fallbackClass 为对应的类的 Class 对象，注意对应的函数必需为 static 函数，否则无法解析。<br><strong>exceptionsToIgnore</strong>：用于指定哪些异常被排除掉，不会计入异常统计中，也不会进入 fallback 逻辑中，而是会原样抛出。</p><h2 id="代码的优化问题"><a href="#代码的优化问题" class="headerlink" title="代码的优化问题"></a>代码的优化问题</h2><p>我们回看热点参数限流中的第2点的测试代码，出现了几个问题</p><p>a、降级方法与业务方法耦合；</p><p>b、每一个方法都需要一个对应的降级方法；</p><p>c、如果服务出现异常而不是限流了，该怎么处理；</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>使用自定义限流处理类来解决问题。</p><h3 id="创建自定义限流处理类-异常处理类"><a href="#创建自定义限流处理类-异常处理类" class="headerlink" title="创建自定义限流处理类/异常处理类"></a>创建自定义限流处理类/异常处理类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.cloud.alibaba.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.BlockException;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.ResoultVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerBlockHandler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResoultVo&lt;Integer&gt; <span class="title">handlerException1</span><span class="params">(BlockException blockException)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResoultVo&lt;&gt;(<span class="number">444</span>,<span class="string">&quot;自定义，global handlerException------1&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResoultVo&lt;Integer&gt; <span class="title">handlerException2</span><span class="params">(BlockException blockException)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResoultVo&lt;&gt;(<span class="number">444</span>,<span class="string">&quot;自定义，global handlerException------2&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResoultVo&lt;Object&gt; <span class="title">exception1</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResoultVo&lt;&gt;(<span class="number">555</span>,<span class="string">&quot;自定义，global Exception------1&quot;</span>,e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：<font color='red'>限流处理类的参数需要在原有参数的基础上添加BlockException blockException</font></p><p>​           <font color='red'>异常处理类的参数需要在原有参数的基础上添加Throwable e</font></p><h3 id="配置资源类"><a href="#配置资源类" class="headerlink" title="配置资源类"></a>配置资源类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(value = &quot;/payment/sentinel/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@SentinelResource(value = &quot;payMentSentinel&quot;,                  </span></span><br><span class="line"><span class="meta">  blockHandlerClass = CustomerBlockHandler.class,                  </span></span><br><span class="line"><span class="meta">  blockHandler = &quot;handlerException1&quot;,                  </span></span><br><span class="line"><span class="meta">  fallbackClass = CustomerBlockHandler.class,                  </span></span><br><span class="line"><span class="meta">  fallback = &quot;exception1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResoultVo&lt;Integer&gt; <span class="title">getSentinelPayment</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        ResoultVo&lt;Integer&gt; resoultVo = <span class="keyword">new</span> ResoultVo&lt;&gt;();    </span><br><span class="line">        resoultVo.setCode(<span class="number">200</span>);    </span><br><span class="line">        resoultVo.setMessage(<span class="string">&quot;使用端口为：&quot;</span>+serverPort);    </span><br><span class="line">        resoultVo.setData(id);    </span><br><span class="line">        <span class="keyword">return</span> resoultVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动项目，配置流控规则"><a href="#启动项目，配置流控规则" class="headerlink" title="启动项目，配置流控规则"></a>启动项目，配置流控规则</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609055744414.png" alt="1609055744414"></p><h3 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h3><h4 id="测试流控统一处理"><a href="#测试流控统一处理" class="headerlink" title="测试流控统一处理"></a>测试流控统一处理</h4><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609056097464.png" alt="1609056097464"></p><p>这里会去找blockHandlerClass流控处理类，然后再去找对应的blockHandler流控处理方法进行处理</p><h4 id="测试异常统一处理"><a href="#测试异常统一处理" class="headerlink" title="测试异常统一处理"></a>测试异常统一处理</h4><p>在代码添加异常int age = 10/0；运行请求</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609056283800.png" alt="1609056283800"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609056247912.png" alt="1609056247912"></p><p>这里会去找fallbackClass异常处理类，然后再去找对应的fallback异常处理方法进行处理，defaultFallback和fallback功能一致，如果设置了fallback，则会默认使用fallback的方法，而不是defaultFallback。</p><h3 id="exceptionsToIgnore配置"><a href="#exceptionsToIgnore配置" class="headerlink" title="exceptionsToIgnore配置"></a>exceptionsToIgnore配置</h3><p>有时候有一些异常我们不希望被fallback处理，我们希望他能抛出，这时候可以配置exceptionsToIgnore来除外相应的异常</p><p>测试：</p><p>代码添加exceptionsToIgnore配置，除外分母为0的异常</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609056338479.png" alt="1608393539417"></p><p>测试发现异常不会被fallback处理，而是被抛出</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609056517689.png" alt="1609056517689"></p><h1 id="sentinel整合openFeign-fallback"><a href="#sentinel整合openFeign-fallback" class="headerlink" title="sentinel整合openFeign+fallback"></a>sentinel整合openFeign+fallback</h1><h2 id="配置服务提供者"><a href="#配置服务提供者" class="headerlink" title="配置服务提供者"></a>配置服务提供者</h2><h3 id="配置pom文件"><a href="#配置pom文件" class="headerlink" title="配置pom文件"></a>配置pom文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud20200704<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cheng.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloudalibaba-sentinel-openfeign-provider9004<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--nacos相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入实体--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cheng.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring boot相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--热部署--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置yml文件"><a href="#配置yml文件" class="headerlink" title="配置yml文件"></a>配置yml文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9004</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nacos-sentinel-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:80,192.168.197.132:81</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="配置主启动类"><a href="#配置主启动类" class="headerlink" title="配置主启动类"></a>配置主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pr1Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Pr1Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写测试服务"><a href="#编写测试服务" class="headerlink" title="编写测试服务"></a>编写测试服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel.rest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.PayMent;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.ResoultVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HashMap&lt;Long, PayMent&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        hashMap.put(<span class="number">1L</span>, <span class="keyword">new</span> PayMent(<span class="number">1L</span>, <span class="string">&quot;28a8c1e3bc2742d8848569891fb42181&quot;</span>));</span><br><span class="line">        hashMap.put(<span class="number">2L</span>, <span class="keyword">new</span> PayMent(<span class="number">2L</span>, <span class="string">&quot;bba8c1e3bc2742d8848569891ac32182&quot;</span>));</span><br><span class="line">        hashMap.put(<span class="number">3L</span>, <span class="keyword">new</span> PayMent(<span class="number">3L</span>, <span class="string">&quot;6ua8c1e3bc2742d8848569891xt92183&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/paymentSQL/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResoultVo&lt;PayMent&gt; <span class="title">paymentSQL</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> </span>&#123;</span><br><span class="line">        PayMent payment = hashMap.get(id);</span><br><span class="line">        ResoultVo&lt;PayMent&gt; result = <span class="keyword">new</span> ResoultVo(<span class="number">200</span>, <span class="string">&quot;from mysql,serverPort:  &quot;</span> + serverPort, payment);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609057420018.png" alt="1609057420018"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609057482444.png" alt="1609057482444"></p><h2 id="配置服务消费者"><a href="#配置服务消费者" class="headerlink" title="配置服务消费者"></a>配置服务消费者</h2><h3 id="配置pom文件-1"><a href="#配置pom文件-1" class="headerlink" title="配置pom文件"></a>配置pom文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud20200704<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cheng.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloudalibaba-sentinel-openfeign-provider9004<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--nacos相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--sentinel相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--openfeign相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入实体--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cheng.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring boot相关配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--热部署--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置yml文件-1"><a href="#配置yml文件-1" class="headerlink" title="配置yml文件"></a>配置yml文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">82</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nacos-sentinel-consumer</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:80,192.168.197.132:81</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:8080</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">service-url:</span></span><br><span class="line">  <span class="attr">nacos-user-service:</span> <span class="string">http://nacos-payment-provider</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Sentinel对Feign的支持</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>最重要的配置</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609057890710.png" alt="1609057890710"></p><h3 id="配置主启动类-1"><a href="#配置主启动类-1" class="headerlink" title="配置主启动类"></a>配置主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CoApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(CoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置测试服务"><a href="#配置测试服务" class="headerlink" title="配置测试服务"></a>配置测试服务</h3><h4 id="PaymentService"><a href="#PaymentService" class="headerlink" title="PaymentService"></a>PaymentService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.PayMent;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.ResoultVo;</span><br><span class="line"><span class="keyword">import</span> com.cheng.sentinel.service.impl.PaymentFallbackServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;nacos-payment-provider&quot;,fallback = PaymentFallbackServiceImpl.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/paymentSQL/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">ResoultVo&lt;PayMent&gt; <span class="title">paymentSQL</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PaymentFallbackServiceImpl-降级回调类"><a href="#PaymentFallbackServiceImpl-降级回调类" class="headerlink" title="PaymentFallbackServiceImpl(降级回调类)"></a>PaymentFallbackServiceImpl(降级回调类)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.PayMent;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.ResoultVo;</span><br><span class="line"><span class="keyword">import</span> com.cheng.sentinel.service.PaymentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentFallbackServiceImpl</span> <span class="keyword">implements</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResoultVo&lt;PayMent&gt; <span class="title">paymentSQL</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResoultVo&lt;PayMent&gt;(<span class="number">44444</span>,<span class="string">&quot;服务降级返回,---PaymentFallbackService&quot;</span>,<span class="keyword">new</span> PayMent(id,<span class="string">&quot;errorSerial&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PayMentController"><a href="#PayMentController" class="headerlink" title="PayMentController"></a>PayMentController</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.sentinel.rest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.PayMent;</span><br><span class="line"><span class="keyword">import</span> com.cheng.cloud.entity.ResoultVo;</span><br><span class="line"><span class="keyword">import</span> com.cheng.sentinel.service.PaymentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayMentController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentService paymentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/consumer/paymentSQL/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResoultVo&lt;PayMent&gt; <span class="title">paymentSQL</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentService.paymentSQL(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动测试-1"><a href="#启动测试-1" class="headerlink" title="启动测试"></a>启动测试</h3><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609057960746.png" alt="1609057960746"></p><p>配置限流规则后，快速点击</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609058011243.png" alt="1609058011243"></p><p>支持轮询的请求操作，此时关闭9004和9005，再次请求：跳入熔断返回方法，测试成功！</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609058067136.png" alt="1609058067136"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609058093924.png" alt="1609058093924"></p><h1 id="sentinel持久化配置"><a href="#sentinel持久化配置" class="headerlink" title="sentinel持久化配置"></a>sentinel持久化配置</h1><p>我们发现，我们每一次重启项目，我们都需要重新配置Sentinel上面的规则，这在生产环境是很不合理的，所以我们需要对其进行持久化配置，Sentinel推荐<strong>通过控制台设置规则后将规则推送到统一的规则中心，客户端实现<font color='red'>ReadableDataSource</font>  接口端监听规则中心实时获取变更</strong>，拓展的常见方式有两种：</p><ul><li><p><strong>拉模式</strong>：客户端主动向某个规则管理中心定期轮询拉取规则，这个规则中心可以是 RDBMS、文件，甚至是 VCS 等。这样做的方式是简单，缺点是无法及时获取变更；</p></li><li><p><strong>推模式</strong>：规则中心统一推送，客户端通过注册监听器的方式时刻监听变化，比如使用 <a href="http://github.com/alibaba/nacos">Nacos</a>、Zookeeper 等配置中心。这种方式有更好的实时性和一致性保证。</p><p>下文，我们会以nacos为例来使用推模式持久化我们的规则</p></li></ul><h2 id="Sentinel-Dashboard服务（控制台）改造"><a href="#Sentinel-Dashboard服务（控制台）改造" class="headerlink" title="Sentinel-Dashboard服务（控制台）改造"></a>Sentinel-Dashboard服务（控制台）改造</h2><p>我们需要改造Sentinel控制台，使我们的规则能够保存到nacos配置中心上。</p><p>这里如果嫌麻烦或者修改后出现异常，可以下载以下地址的jar包，里面是修改好所有规则的jar包</p><p><a href="http://cheng_qiwei.gitee.io/blog/file/sentinel-dashboard.jar">http://cheng_qiwei.gitee.io/blog/file/sentinel-dashboard.jar</a></p><h3 id="修改pom文件"><a href="#修改pom文件" class="headerlink" title="修改pom文件"></a>修改pom文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="拷贝文件"><a href="#拷贝文件" class="headerlink" title="拷贝文件"></a>拷贝文件</h3><p>将 <strong>sentinel-dashboard/src/test/java/com/alibaba/csp/sentinel/dashboard/rule/nacos</strong>  下的所有文件拷贝到  <strong>sentinel-dashboard/src/main/java/com/alibaba/csp/sentinel/dashboard/rule/nacos</strong> </p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开  <strong>sentinel-dashboard\src\main\resources\application.properties</strong>  添加配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">nacos 配置</span></span><br><span class="line">nacos.address=127.0.0.1:80</span><br><span class="line">nacos.namespace=</span><br></pre></td></tr></table></figure><h3 id="修改NacosConfig工具类"><a href="#修改NacosConfig工具类" class="headerlink" title="修改NacosConfig工具类"></a>修改NacosConfig工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.rule.nacos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.datasource.entity.rule.RuleEntity;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.util.JSONUtils;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.Rule;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.AssertUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.ConfigService;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.exception.NacosException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eric Zhao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.4.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GROUP_ID = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-flow-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PARAM_FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-param-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLUSTER_MAP_DATA_ID_POSTFIX = <span class="string">&quot;-cluster-map&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEGRADE_DATA_ID_POSTFIX = <span class="string">&quot;-degrade-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYSTEM_DATA_ID_POSTFIX = <span class="string">&quot;-system-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY_DATA_ID_POSTFIX = <span class="string">&quot;-authority-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DASHBOARD_POSTFIX = <span class="string">&quot;-dashboard&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cc for `cluster-client`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cc-config&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cs for `cluster-server`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_TRANSPORT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-transport-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_FLOW_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-flow-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_NAMESPACE_SET_DATA_ID_POSTFIX = <span class="string">&quot;-cs-namespace-set&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NacosConfigUtil</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将规则序列化成JSON文本，存储到Nacos server中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configService nacos config service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> app           应用名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postfix       规则后缀 eg.NacosConfigUtil.FLOW_DATA_ID_POSTFIX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rules         规则对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NacosException 异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">setRuleStringToNacos</span><span class="params">(ConfigService configService, String app, String postfix, List&lt;T&gt; rules)</span> <span class="keyword">throws</span> NacosException </span>&#123;</span><br><span class="line">        AssertUtil.notEmpty(app, <span class="string">&quot;app name cannot be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (rules == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Rule&gt; ruleForApp = rules.stream()</span><br><span class="line">                .map(rule -&gt; &#123;</span><br><span class="line">                    RuleEntity rule1 = (RuleEntity) rule;</span><br><span class="line">                    System.out.println(rule1.getClass());</span><br><span class="line">                    Rule rule2 = rule1.toRule();</span><br><span class="line">                    System.out.println(rule2.getClass());</span><br><span class="line">                    <span class="keyword">return</span> rule2;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存储，给微服务使用</span></span><br><span class="line">        String dataId = genDataId(app, postfix);</span><br><span class="line">        configService.publishConfig(</span><br><span class="line">                dataId,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                JSONUtils.toJSONString(ruleForApp)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存储，给控制台使用</span></span><br><span class="line">        configService.publishConfig(</span><br><span class="line">                dataId + DASHBOARD_POSTFIX,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                JSONUtils.toJSONString(rules)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从Nacos server中查询响应规则，并将其反序列化成对应Rule实体</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configService nacos config service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> appName       应用名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postfix       规则后缀 eg.NacosConfigUtil.FLOW_DATA_ID_POSTFIX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz         类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;           泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 规则对象列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NacosException 异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getRuleEntitiesFromNacos</span><span class="params">(ConfigService configService, String appName, String postfix, Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> NacosException </span>&#123;</span><br><span class="line">        String rules = configService.getConfig(</span><br><span class="line">                genDataId(appName, postfix) + DASHBOARD_POSTFIX,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                <span class="number">3000</span></span><br><span class="line">        );</span><br><span class="line">        System.out.println(<span class="string">&quot;回收数据：&quot;</span>+rules);</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(rules)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;回收数据2：&quot;</span>+JSONUtils.parseObject(clazz, rules));</span><br><span class="line">        <span class="keyword">return</span> JSONUtils.parseObject(clazz, rules);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">genDataId</span><span class="params">(String appName, String postfix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appName + postfix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加一个JSONUtils在-com-alibaba-csp-sentinel-dashboard-util上"><a href="#添加一个JSONUtils在-com-alibaba-csp-sentinel-dashboard-util上" class="headerlink" title="添加一个JSONUtils在  com.alibaba.csp.sentinel.dashboard.util上"></a>添加一个<strong>JSONUtils</strong>在  <strong>com.alibaba.csp.sentinel.dashboard.util</strong>上</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.util;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JavaType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * json根工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSONUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">String <span class="title">toJSONString</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ObjectMapper().writeValueAsString(object);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JavaType <span class="title">getCollectionType</span><span class="params">(Class&lt;?&gt; collectionClass, Class&lt;?&gt;... elementClasses)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ObjectMapper()</span><br><span class="line">                .getTypeFactory()</span><br><span class="line">                .constructParametricType(collectionClass, elementClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">parseObject</span><span class="params">(Class&lt;T&gt; clazz, String string)</span> </span>&#123;</span><br><span class="line">        JavaType javaType = getCollectionType(ArrayList.class, clazz);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (List&lt;T&gt;) <span class="keyword">new</span> ObjectMapper().readValue(string, javaType);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-NacosConfigUtil-文件"><a href="#修改-NacosConfigUtil-文件" class="headerlink" title="修改 NacosConfigUtil 文件"></a>修改 <strong>NacosConfigUtil</strong> 文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.rule.nacos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.datasource.entity.rule.RuleEntity;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.util.JSONUtils;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.Rule;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.AssertUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.ConfigService;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.exception.NacosException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eric Zhao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.4.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GROUP_ID = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-flow-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PARAM_FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-param-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLUSTER_MAP_DATA_ID_POSTFIX = <span class="string">&quot;-cluster-map&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEGRADE_DATA_ID_POSTFIX = <span class="string">&quot;-degrade-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYSTEM_DATA_ID_POSTFIX = <span class="string">&quot;-system-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY_DATA_ID_POSTFIX = <span class="string">&quot;-authority-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DASHBOARD_POSTFIX = <span class="string">&quot;-dashboard&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cc for `cluster-client`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cc-config&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cs for `cluster-server`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_TRANSPORT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-transport-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_FLOW_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-flow-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_NAMESPACE_SET_DATA_ID_POSTFIX = <span class="string">&quot;-cs-namespace-set&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NacosConfigUtil</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将规则序列化成JSON文本，存储到Nacos server中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configService nacos config service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> app           应用名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postfix       规则后缀 eg.NacosConfigUtil.FLOW_DATA_ID_POSTFIX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rules         规则对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NacosException 异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">setRuleStringToNacos</span><span class="params">(ConfigService configService, String app, String postfix, List&lt;T&gt; rules)</span> <span class="keyword">throws</span> NacosException </span>&#123;</span><br><span class="line">        AssertUtil.notEmpty(app, <span class="string">&quot;app name cannot be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (rules == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Rule&gt; ruleForApp = rules.stream()</span><br><span class="line">                .map(rule -&gt; &#123;</span><br><span class="line">                    RuleEntity rule1 = (RuleEntity) rule;</span><br><span class="line">                    System.out.println(rule1.getClass());</span><br><span class="line">                    Rule rule2 = rule1.toRule();</span><br><span class="line">                    System.out.println(rule2.getClass());</span><br><span class="line">                    <span class="keyword">return</span> rule2;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存储，给微服务使用</span></span><br><span class="line">        String dataId = genDataId(app, postfix);</span><br><span class="line">        configService.publishConfig(</span><br><span class="line">                dataId,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                JSONUtils.toJSONString(ruleForApp)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存储，给控制台使用</span></span><br><span class="line">        configService.publishConfig(</span><br><span class="line">                dataId + DASHBOARD_POSTFIX,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                JSONUtils.toJSONString(rules)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从Nacos server中查询响应规则，并将其反序列化成对应Rule实体</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configService nacos config service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> appName       应用名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postfix       规则后缀 eg.NacosConfigUtil.FLOW_DATA_ID_POSTFIX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz         类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;           泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 规则对象列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NacosException 异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getRuleEntitiesFromNacos</span><span class="params">(ConfigService configService, String appName, String postfix, Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> NacosException </span>&#123;</span><br><span class="line">        String rules = configService.getConfig(</span><br><span class="line">                genDataId(appName, postfix) + DASHBOARD_POSTFIX,</span><br><span class="line">                NacosConfigUtil.GROUP_ID,</span><br><span class="line">                <span class="number">3000</span></span><br><span class="line">        );</span><br><span class="line">        System.out.println(<span class="string">&quot;回收数据：&quot;</span>+rules);</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(rules)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;回收数据2：&quot;</span>+JSONUtils.parseObject(clazz, rules));</span><br><span class="line">        <span class="keyword">return</span> JSONUtils.parseObject(clazz, rules);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">genDataId</span><span class="params">(String appName, String postfix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appName + postfix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-FlowRuleNacosProvider"><a href="#修改-FlowRuleNacosProvider" class="headerlink" title="修改 FlowRuleNacosProvider"></a>修改 FlowRuleNacosProvider</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.rule.nacos.flow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.datasource.entity.rule.FlowRuleEntity;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.DynamicRuleProvider;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.nacos.NacosConfigUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.datasource.Converter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.ConfigService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eric Zhao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.4.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;flowRuleNacosProvider&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowRuleNacosProvider</span> <span class="keyword">implements</span> <span class="title">DynamicRuleProvider</span>&lt;<span class="title">List</span>&lt;<span class="title">FlowRuleEntity</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigService configService;</span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    private Converter&lt;String, List&lt;FlowRuleEntity&gt;&gt; converter;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;FlowRuleEntity&gt; <span class="title">getRules</span><span class="params">(String appName)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        String rules = configService.getConfig(appName + NacosConfigUtil.FLOW_DATA_ID_POSTFIX,</span></span><br><span class="line"><span class="comment">//            NacosConfigUtil.GROUP_ID, 3000);</span></span><br><span class="line"><span class="comment">//        if (StringUtil.isEmpty(rules)) &#123;</span></span><br><span class="line"><span class="comment">//            return new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        return converter.convert(rules);</span></span><br><span class="line">        <span class="keyword">return</span> NacosConfigUtil.getRuleEntitiesFromNacos(</span><br><span class="line">                <span class="keyword">this</span>.configService,</span><br><span class="line">                appName,</span><br><span class="line">                NacosConfigUtil.FLOW_DATA_ID_POSTFIX,</span><br><span class="line">                FlowRuleEntity.class</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-FlowRuleNacosPublisher"><a href="#修改-FlowRuleNacosPublisher" class="headerlink" title="修改 FlowRuleNacosPublisher"></a>修改 FlowRuleNacosPublisher</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.rule.nacos.flow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.datasource.entity.rule.FlowRuleEntity;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.DynamicRulePublisher;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.nacos.NacosConfigUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.datasource.Converter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.AssertUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.ConfigService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eric Zhao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.4.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;flowRuleNacosPublisher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowRuleNacosPublisher</span> <span class="keyword">implements</span> <span class="title">DynamicRulePublisher</span>&lt;<span class="title">List</span>&lt;<span class="title">FlowRuleEntity</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigService configService;</span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    private Converter&lt;List&lt;FlowRuleEntity&gt;, String&gt; converter;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">publish</span><span class="params">(String app, List&lt;FlowRuleEntity&gt; rules)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        AssertUtil.notEmpty(app, &quot;app name cannot be empty&quot;);</span></span><br><span class="line"><span class="comment">//        if (rules == null) &#123;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        configService.publishConfig(app + NacosConfigUtil.FLOW_DATA_ID_POSTFIX,</span></span><br><span class="line"><span class="comment">//            NacosConfigUtil.GROUP_ID, converter.convert(rules));</span></span><br><span class="line">        NacosConfigUtil.setRuleStringToNacos(</span><br><span class="line">                <span class="keyword">this</span>.configService,</span><br><span class="line">                app,</span><br><span class="line">                NacosConfigUtil.FLOW_DATA_ID_POSTFIX,</span><br><span class="line">                rules</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改FlowControllerV2"><a href="#修改FlowControllerV2" class="headerlink" title="修改FlowControllerV2"></a>修改FlowControllerV2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="comment">//@Qualifier(&quot;flowRuleDefaultProvider&quot;)</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;flowRuleNacosProvider&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRuleProvider&lt;List&lt;FlowRuleEntity&gt;&gt; ruleProvider;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="comment">//@Qualifier(&quot;flowRuleDefaultPublisher&quot;)</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;flowRuleNacosPublisher&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; rulePublisher;</span><br></pre></td></tr></table></figure><h3 id="修改sidebar-html"><a href="#修改sidebar-html" class="headerlink" title="修改sidebar.html"></a>修改sidebar.html</h3><p><strong>sentinel-dashboard/src/main/webapp/resources/app/scripts/directives/sidebar/sidebar.html</strong></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609060601031.png" alt="1609060601031"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;li ui-sref-active&#x3D;&quot;active&quot; ng-if&#x3D;&quot;!entry.isGateway&quot;&gt;</span><br><span class="line">            &lt;a ui-sref&#x3D;&quot;dashboard.flow(&#123;app: entry.app&#125;)&quot;&gt;</span><br><span class="line">              &lt;i class&#x3D;&quot;glyphicon glyphicon-filter&quot;&gt;&lt;&#x2F;i&gt;&amp;nbsp;&amp;nbsp;流控规则&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;li&gt;</span><br></pre></td></tr></table></figure><h3 id="修改FlowControllerV1"><a href="#修改FlowControllerV1" class="headerlink" title="修改FlowControllerV1"></a>修改FlowControllerV1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.alibaba.csp.sentinel.dashboard.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.auth.AuthAction;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.auth.AuthService.PrivilegeType;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.DynamicRuleProvider;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.rule.DynamicRulePublisher;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.util.StringUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.client.SentinelApiClient;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.datasource.entity.rule.FlowRuleEntity;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.discovery.MachineInfo;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.domain.Result;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.dashboard.repository.rule.InMemoryRuleRepositoryAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Flow rule controller.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> leyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eric Zhao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/v1/flow&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowControllerV1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(FlowControllerV1.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> InMemoryRuleRepositoryAdapter&lt;FlowRuleEntity&gt; repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    private SentinelApiClient sentinelApiClient;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;flowRuleNacosProvider&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRuleProvider&lt;List&lt;FlowRuleEntity&gt;&gt; ruleProvider;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;flowRuleNacosPublisher&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; rulePublisher;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/rules&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.READ_RULE)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;List&lt;FlowRuleEntity&gt;&gt; apiQueryMachineRules(<span class="meta">@RequestParam</span> String app,</span><br><span class="line">                                                             <span class="meta">@RequestParam</span> String ip,</span><br><span class="line">                                                             <span class="meta">@RequestParam</span> Integer port) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(app)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;app can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(ip)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;ip can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (port == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;port can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//List&lt;FlowRuleEntity&gt; rules = sentinelApiClient.fetchFlowRuleOfMachine(app, ip, port);</span></span><br><span class="line">            List&lt;FlowRuleEntity&gt; rules = ruleProvider.getRules(app);</span><br><span class="line">            rules = repository.saveAll(rules);</span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(rules);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;Error when querying flow rules&quot;</span>, throwable);</span><br><span class="line">            <span class="keyword">return</span> Result.ofThrowable(-<span class="number">1</span>, throwable);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> &lt;R&gt; <span class="function">Result&lt;R&gt; <span class="title">checkEntityInternal</span><span class="params">(FlowRuleEntity entity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(entity.getApp())) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;app can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(entity.getIp())) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;ip can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getPort() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;port can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(entity.getLimitApp())) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;limitApp can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(entity.getResource())) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;resource can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getGrade() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;grade can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getGrade() != <span class="number">0</span> &amp;&amp; entity.getGrade() != <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;grade must be 0 or 1, but &quot;</span> + entity.getGrade() + <span class="string">&quot; got&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getCount() == <span class="keyword">null</span> || entity.getCount() &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;count should be at lease zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getStrategy() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;strategy can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getStrategy() != <span class="number">0</span> &amp;&amp; StringUtil.isBlank(entity.getRefResource())) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;refResource can&#x27;t be null or empty when strategy!=0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.getControlBehavior() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;controlBehavior can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> controlBehavior = entity.getControlBehavior();</span><br><span class="line">        <span class="keyword">if</span> (controlBehavior == <span class="number">1</span> &amp;&amp; entity.getWarmUpPeriodSec() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;warmUpPeriodSec can&#x27;t be null when controlBehavior==1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (controlBehavior == <span class="number">2</span> &amp;&amp; entity.getMaxQueueingTimeMs() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;maxQueueingTimeMs can&#x27;t be null when controlBehavior==2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (entity.isClusterMode() &amp;&amp; entity.getClusterConfig() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;cluster config should be valid&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/rule&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.WRITE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;FlowRuleEntity&gt; <span class="title">apiAddFlowRule</span><span class="params">(<span class="meta">@RequestBody</span> FlowRuleEntity entity)</span> </span>&#123;</span><br><span class="line">        Result&lt;FlowRuleEntity&gt; checkResult = checkEntityInternal(entity);</span><br><span class="line">        <span class="keyword">if</span> (checkResult != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> checkResult;</span><br><span class="line">        &#125;</span><br><span class="line">        entity.setId(<span class="keyword">null</span>);</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        entity.setGmtCreate(date);</span><br><span class="line">        entity.setGmtModified(date);</span><br><span class="line">        entity.setLimitApp(entity.getLimitApp().trim());</span><br><span class="line">        entity.setResource(entity.getResource().trim());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            entity = repository.save(entity);</span><br><span class="line">            publishRules(entity.getApp());</span><br><span class="line">            <span class="comment">//publishRules(entity.getApp(), entity.getIp(), entity.getPort()).get(5000, TimeUnit.MILLISECONDS);</span></span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(entity);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            Throwable e = t <span class="keyword">instanceof</span> ExecutionException ? t.getCause() : t;</span><br><span class="line">            logger.error(<span class="string">&quot;Failed to add new flow rule, app=&#123;&#125;, ip=&#123;&#125;&quot;</span>, entity.getApp(), entity.getIp(), e);</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/save.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.WRITE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;FlowRuleEntity&gt; <span class="title">apiUpdateFlowRule</span><span class="params">(Long id, String app,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                  String limitApp, String resource, Integer grade,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                  Double count, Integer strategy, String refResource,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                  Integer controlBehavior, Integer warmUpPeriodSec,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                  Integer maxQueueingTimeMs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        FlowRuleEntity entity = repository.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (entity == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id &quot;</span> + id + <span class="string">&quot; dose not exist&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(app)) &#123;</span><br><span class="line">            entity.setApp(app.trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(limitApp)) &#123;</span><br><span class="line">            entity.setLimitApp(limitApp.trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(resource)) &#123;</span><br><span class="line">            entity.setResource(resource.trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (grade != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grade != <span class="number">0</span> &amp;&amp; grade != <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;grade must be 0 or 1, but &quot;</span> + grade + <span class="string">&quot; got&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            entity.setGrade(grade);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count != <span class="keyword">null</span>) &#123;</span><br><span class="line">            entity.setCount(count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (strategy != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (strategy != <span class="number">0</span> &amp;&amp; strategy != <span class="number">1</span> &amp;&amp; strategy != <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;strategy must be in [0, 1, 2], but &quot;</span> + strategy + <span class="string">&quot; got&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            entity.setStrategy(strategy);</span><br><span class="line">            <span class="keyword">if</span> (strategy != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (StringUtil.isBlank(refResource)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;refResource can&#x27;t be null or empty when strategy!=0&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                entity.setRefResource(refResource.trim());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (controlBehavior != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (controlBehavior != <span class="number">0</span> &amp;&amp; controlBehavior != <span class="number">1</span> &amp;&amp; controlBehavior != <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;controlBehavior must be in [0, 1, 2], but &quot;</span> + controlBehavior + <span class="string">&quot; got&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (controlBehavior == <span class="number">1</span> &amp;&amp; warmUpPeriodSec == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;warmUpPeriodSec can&#x27;t be null when controlBehavior==1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (controlBehavior == <span class="number">2</span> &amp;&amp; maxQueueingTimeMs == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;maxQueueingTimeMs can&#x27;t be null when controlBehavior==2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            entity.setControlBehavior(controlBehavior);</span><br><span class="line">            <span class="keyword">if</span> (warmUpPeriodSec != <span class="keyword">null</span>) &#123;</span><br><span class="line">                entity.setWarmUpPeriodSec(warmUpPeriodSec);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (maxQueueingTimeMs != <span class="keyword">null</span>) &#123;</span><br><span class="line">                entity.setMaxQueueingTimeMs(maxQueueingTimeMs);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        entity.setGmtModified(date);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            entity = repository.save(entity);</span><br><span class="line">            <span class="keyword">if</span> (entity == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;save entity fail: null&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            publishRules(entity.getApp());</span><br><span class="line">            <span class="comment">//publishRules(entity.getApp(), entity.getIp(), entity.getPort()).get(5000, TimeUnit.MILLISECONDS);</span></span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(entity);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            Throwable e = t <span class="keyword">instanceof</span> ExecutionException ? t.getCause() : t;</span><br><span class="line">            logger.error(<span class="string">&quot;Error when updating flow rules, app=&#123;&#125;, ip=&#123;&#125;, ruleId=&#123;&#125;&quot;</span>, entity.getApp(),</span><br><span class="line">                entity.getIp(), id, e);</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/delete.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.WRITE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Long&gt; <span class="title">apiDeleteFlowRule</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (id == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        FlowRuleEntity oldEntity = repository.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (oldEntity == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            repository.delete(id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            publishRules(oldEntity.getApp());</span><br><span class="line">            <span class="comment">//publishRules(oldEntity.getApp(), oldEntity.getIp(), oldEntity.getPort()).get(5000, TimeUnit.MILLISECONDS);</span></span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            Throwable e = t <span class="keyword">instanceof</span> ExecutionException ? t.getCause() : t;</span><br><span class="line">            logger.error(<span class="string">&quot;Error when deleting flow rules, app=&#123;&#125;, ip=&#123;&#125;, id=&#123;&#125;&quot;</span>, oldEntity.getApp(),</span><br><span class="line">                oldEntity.getIp(), id, e);</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    private CompletableFuture&lt;Void&gt; publishRules(String app, String ip, Integer port) &#123;</span></span><br><span class="line"><span class="comment">//        List&lt;FlowRuleEntity&gt; rules = repository.findAllByMachine(MachineInfo.of(app, ip, port));</span></span><br><span class="line"><span class="comment">//        return sentinelApiClient.setFlowRuleOfMachineAsync(app, ip, port, rules);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">publishRules</span><span class="params">(<span class="comment">/*@NonNull*/</span> String app)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;FlowRuleEntity&gt; rules = repository.findAllByApp(app);</span><br><span class="line">        rulePublisher.publish(app, rules);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，**<font color='red'>Sentinel控制台流控规则</font>**的改造结束！其他规则的修改可以参照此来进行修改：</p><p>具体代码请参考：<a href="http://gitee.com/cheng_qiwei/blog/raw/master/file/sentinel-dashboard.rar">http://gitee.com/cheng_qiwei/blog/raw/master/file/sentinel-dashboard.rar</a></p><h2 id="Sentinel服务配置"><a href="#Sentinel服务配置" class="headerlink" title="Sentinel服务配置"></a>Sentinel服务配置</h2><h3 id="修改pom文件-1"><a href="#修改pom文件-1" class="headerlink" title="修改pom文件"></a>修改pom文件</h3><p>添加四个依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  sentinel核心库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  sentinel AspectJ 的扩展用于自动定义资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-annotation-aspectj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- sentinel客户端与dashboard通信依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-transport-simple-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改yml文件"><a href="#修改yml文件" class="headerlink" title="修改yml文件"></a>修改yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9003</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloudalibaba-sentinel-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:80,192.168.197.132:81</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:8080</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span></span><br><span class="line">        <span class="attr">client-ip:</span> <span class="number">192.168</span><span class="number">.136</span><span class="number">.4</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">flow:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:80</span></span><br><span class="line">            <span class="attr">dataId:</span> <span class="string">$&#123;spring.application.name&#125;-flow-rules</span></span><br><span class="line">            <span class="attr">groupId:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-type:</span> <span class="string">json</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">flow</span></span><br><span class="line">        <span class="attr">param:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.197</span><span class="number">.132</span><span class="string">:80</span></span><br><span class="line">            <span class="attr">dataId:</span> <span class="string">$&#123;spring.application.name&#125;-param-rules</span></span><br><span class="line">            <span class="attr">groupId:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-type:</span> <span class="string">json</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">param</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609061203202.png" alt="1609061203202"></p><p>主要添加上图内容，如果还有其他规则，则需要添加对应的上图内容即可。</p><h3 id="配置NacosSentinelConfig"><a href="#配置NacosSentinelConfig" class="headerlink" title="配置NacosSentinelConfig"></a>配置NacosSentinelConfig</h3><p><font color='red'>配置该文件的功能是将Sentinel默认通过内存获取规则修改为从nacos上面获取对应规则</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cheng.cloud.alibaba.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.datasource.AbstractDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.datasource.ReadableDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.datasource.nacos.NacosDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.init.InitFunc;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRule;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.flow.param.ParamFlowRule;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.block.flow.param.ParamFlowRuleManager;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.system.SystemRule;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.slots.system.SystemRuleManager;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.TypeReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosSentinelConfig</span></span>&#123;</span><br><span class="line">    <span class="comment">/**配置流控规则从nacos获取*/</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initFlowDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String serverAddr = <span class="string">&quot;192.168.197.132:80&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String groupId = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String dataId = <span class="string">&quot;cloudalibaba-sentinel-service-flow-rules&quot;</span>;</span><br><span class="line"></span><br><span class="line">        ReadableDataSource&lt;String, List&lt;FlowRule&gt;&gt; readableFlowDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(</span><br><span class="line">                serverAddr,</span><br><span class="line">                groupId,</span><br><span class="line">                dataId,</span><br><span class="line">                source -&gt; JSONObject.parseObject(source,<span class="keyword">new</span> TypeReference&lt;List&lt;FlowRule&gt;&gt;()&#123;&#125;)</span><br><span class="line">        );</span><br><span class="line">        FlowRuleManager.register2Property(readableFlowDataSource.getProperty());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**配置热点参数规则从nacos获取*/</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initParamDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String serverAddr = <span class="string">&quot;192.168.197.132:80&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String groupId = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String dataId = <span class="string">&quot;cloudalibaba-sentinel-service-param-rules&quot;</span>;</span><br><span class="line"></span><br><span class="line">        ReadableDataSource&lt;String, List&lt;ParamFlowRule&gt;&gt; readableFlowDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(</span><br><span class="line">                serverAddr,</span><br><span class="line">                groupId,</span><br><span class="line">                dataId,</span><br><span class="line">                source -&gt; JSONObject.parseObject(source,<span class="keyword">new</span> TypeReference&lt;List&lt;ParamFlowRule&gt;&gt;()&#123;&#125;)</span><br><span class="line">        );</span><br><span class="line">        ParamFlowRuleManager.register2Property(readableFlowDataSource.getProperty());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**配置系统参数规则从nacos获取*/</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initSystemDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String serverAddr = <span class="string">&quot;192.168.197.132:80&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String groupId = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> String dataId = <span class="string">&quot;cloudalibaba-sentinel-service-system-rules&quot;</span>;</span><br><span class="line"></span><br><span class="line">        ReadableDataSource&lt;String, List&lt;SystemRule&gt;&gt; readableFlowDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(</span><br><span class="line">                serverAddr,</span><br><span class="line">                groupId,</span><br><span class="line">                dataId,</span><br><span class="line">                source -&gt; JSONObject.parseObject(source,<span class="keyword">new</span> TypeReference&lt;List&lt;SystemRule&gt;&gt;()&#123;&#125;)</span><br><span class="line">        );</span><br><span class="line">        SystemRuleManager.register2Property(readableFlowDataSource.getProperty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，Sentinel服务就修改结束。</p><h2 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h2><p>服务启动后，新增流控规则；</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609061599958.png" alt="1609061599958"></p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609061646460.png" alt="1609061646460"></p><p>我们可以从nacos看见配置文件，里面已经把我们的Sentinel配置写进来了；</p><p>我们再测试 /testA 接口，流控规则生效，配置成功，至此，我们的流控规则持久化已经成功了。</p><p><img src="http://cheng_qiwei.gitee.io/blog/img/1609061754780.png" alt="1609061754780"></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloudAlibaba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sentinel </tag>
            
            <tag> SpringCloudAlibaba </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
